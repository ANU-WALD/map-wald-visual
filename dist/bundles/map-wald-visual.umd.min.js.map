{"version":3,"sources":["ng://map-wald-visual/wms-layer/wms-layer.component.ts","ng://map-wald-visual/map-legend/map-legend.component.ts","ng://map-wald-visual/map-control/map-control.component.ts","ng://map-wald-visual/date-shifter/date-shifter.component.ts","ng://map-wald-visual/one-time-splash/one-time-splash.component.ts","ng://map-wald-visual/date-element/date-element.component.ts","ng://map-wald-visual/share-view/share-view.component.ts","ng://map-wald-visual/location-search/location-search.component.ts","ng://map-wald-visual/layered-map/layered-map.component.ts","ng://map-wald-visual/action-buttons/zoom-layer/zoom-layer.component.ts","ng://map-wald-visual/action-buttons/zoom-full/zoom-full.component.ts","ng://map-wald-visual/action-buttons/zoom-out/zoom-out.component.ts","ng://map-wald-visual/action-buttons/zoom-in/zoom-in.component.ts","ng://map-wald-visual/action-buttons/cycle-base-map/cycle-base-map.component.ts","ng://map-wald-visual/action-buttons/cycle-opacity/cycle-opacity.component.ts","ng://map-wald-visual/button-bar/button-bar.component.ts","ng://map-wald-visual/timeseries-chart/timeseries-chart.component.ts","ng://map-wald-visual/feature-table/feature-table.component.ts","ng://map-wald-visual/collapsible-map-control/collapsible-map-control.component.ts","ng://map-wald-visual/base-map-selection/base-map-selection.component.ts","ng://map-wald-visual/simple-tree-node/simple-tree-node.component.ts","ng://map-wald-visual/simple-tree/simple-tree.component.ts","ng://map-wald-visual/catalog/catalog.component.ts","ng://map-wald-visual/date-selection/date-selection.component.ts","ng://map-wald-visual/layer-properties/layer-properties.component.ts","ng://map-wald-visual/layer-control/layer-control.component.ts","ng://map-wald-visual/theme-navbar/theme-navbar.component.ts","ng://map-wald-visual/geocoding.service.ts","ng://map-wald-visual/index.ts","ng://map-wald-visual/map-wald-visual.ts"],"names":["WMSLayerComponent","_wmsService","_wrapper","this","opacity","position","zoom","building","prototype","buildMap","_this","getNativeMap","then","theMap","map","overlay","buildImageMap","z","url","params","overlayMapTypes","length","removeAt","insertAt","push","catch","e","console","log","ngOnInit","ngOnChanges","changes","ngOnDestroy","map_wald_1","core_2","__decorate","core_1","selector","template","exports","MapLegendComponent","_palettes","colours","labels","title","mapUnits","helpText","tooltipPlacement","generatedLabels","formatValue","val","decimalPlaces","parts","toString","split","replace","substr","join","Object","defineProperty","_cbPalette","cbp","generatePalette","_cbCount","cbc","_cbReverse","cbr","_cbRange","generateLabels","count","upper","delta","result","lower","Math","max","log10","toFixed","min","i","reverse","getPalette","subscribe","palette","slice","Array","MapControlComponent","_el","ngAfterViewInit","m","content","nativeElement","querySelector","nodeName","controlDiv","document","createElement","appendChild","controls","window","google","maps","ControlPosition","static","DateShifterComponent","interval","limits","date","Date","dateChange","value","label","timer","dateText","startTimer","clearInterval","setInterval","tick","reset","sliderMoved","sign","getTime","abs","setDate","getDate","setMonth","getMonth","setFullYear","getFullYear","setDateText","emit","toLocaleDateString","setLabel","OneTimeSplashComponent","modalService","hideMessage","storageKey","application","setTimeout","key","doNotShow","store","get","show","current","open","splashTemplate","size","windowClass","klass","close","doNotShowClicked","set","ng_bootstrap_1","DateElementComponent","step","changed","move","n","src","property","ShareViewComponent","LocationSearchComponent","LayeredMapComponent","_zone","staticData","metadata","layers","markers","mapTypeId","layersChange","featureSelected","pointSelected","mapTypePosition","google_maps_types_1","BOTTOM_LEFT","streetViewControl","selectedFeature","showMapType","mapTypeOptions","lat","lng","setLayerPositions","infoWindows","forEach","w","runOutsideAngular","bounds","_bounds","layersChanged","layerAdded","selection","find","l","layer","mapped","layerType","options","legend","vectors","host","filepath","data","activateLayer","update","action","filter","ml","concat","ix","extractFeature","f","geo","getGeometry","type","coordinates","props","forEachProperty","prop","geometry","properties","clicked","event","feature","circleClicked","mapClick","coords","zoomToBounds","zoomChanged","ZoomLayerComponent","zoomToLayer","spatialExtent","b","assign","fullBounds","layered_map_component_1","ZoomFullComponent","ZoomOutComponent","minZoom","zoomOut","ZoomInComponent","maxZoom","zoomIn","CycleBaseMapComponent","baseLayers","map_type_id","tooltip","baseLayer","toggleBaseLayer","next","findIndex","CycleOpacityComponent","layerOpacity","updateLayers","cycleTransparency","ButtonBarComponent","TimeseriesChartComponent","_element","timeSeries","marginLeft","marginRight","marginTop","marginBottom","titlefont","undefined","draw","node","Plotly","purge","commonUnits","seriesUnits","ts","units","every","u","layout","margin","t","r","yaxis","fixedrange","width","height","plot","nonNullCount","values","v","isNaN","mode","style","suffix","x","dates","y","name","FeatureTableComponent","styles","_keys","keys","CollapsibleMapControlComponent","BaseMapSelectionComponent","SimpleTreeNodeComponent","nodeSelected","evalState","treeClick","stopPropagation","preventDefault","tree","expanded","actions","children","leaf","collapsed","icon","expandedIcon","collapsedIcon","leafIcon","SimpleTreeComponent","showTop","childSelected","CatalogComponent","filterService","showPlaceholders","defaultAction","layerActions","layerSelected","filterText","catalog","buildTree","highlightLayers","self","cat","visible","deferredLayers","themes","path","skip","reduce","deferredThemes","treeActions","la","layerClick","layerToTree","tmp","description","rxjs_1","getMetadata","pipe","operators_1","meta","descriptionField","themeToTree","placeholder","findParent","components","parent","index","components_1","__values","components_1_1","done","component","found","_c","e_2","_d","newNode","addChild","child","splice","_a","__read","activeLayers","indexOf","activeChild","DateSelectionComponent","timeUtils","stepDays","referenceDate","need","day","month","year","atMax","atMin","minDate","minDateStruct","convertDate","maxDate","maxDateStruct","dateStruct","timestep","assessDateComponents","checkLimits","dateStructChanged","UTC","checkReference","onDateChanged","datesEqual","refComponents","interpolate","s","currentRef","timeSpan","days","round","LayerPropertiesComponent","pointSelectionService","getKeys","propertyChanged","availableTags","tags","pointVariables","publications","publication","selectedFeatureSubscription","evt","findTags","unsubscribe","pointdata","queryPointData","publicationSelected","idx","pointSelectionChanged","updateVariables","updateLayer","processTags","k","vAsTag","flattenedSettings","setDefaultTags","tagChanged","tag","zoomToExtent","lon","pointSelection","variable","selectedVariable","sel","timeseriesVariables","variables","exclude","some","pattern","match","defaultVariable","LayerControlComponent","allowRemove","showLegends","allowReorder","foo","applyViewMode","fetchMetadata","uniformViewMode","allLegends","showLegend","layerLegend","moveToTop","_changed","moveUp","moveDown","moveToBottom","removeLayer","layerPropertyChanged","populateMetadata","ThemeNavbarComponent","stop","GeocodingService","_api","geocode","address","bnds","promise","Promise","resolve","reject","load","Geocoder","componentRestrictions","country","region","results","status","GeocoderStatus","OK","formatted_address","__export","wmsLayer_component","mapLegend_component","dateShifter_component","oneTimeSplash_component","dateElement_component","shareView_component","locationSearch_component","zoomLayer_component","zoomFull_component","zoomOut_component","zoomIn_component","cycleBaseMap_component","cycleOpacity_component","buttonBar_component","timeseriesChart_component","featureTable_component","collapsibleMapControl_component","baseMapSelection_component","simpleTreeNode_component","simpleTree_component","catalog_component","dateSelection_component","layerProperties_component","layerControl_component","layeredMap_component","themeNavbar_component","mapControl_component","geocoding_service","date_shifter_component_1","one_time_splash_component_1","date_element_component_1","share_view_component_1","location_search_component_1","zoom_layer_component_1","zoom_full_component_1","zoom_out_component_1","zoom_in_component_1","cycle_base_map_component_1","cycle_opacity_component_1","button_bar_component_1","timeseries_chart_component_1","feature_table_component_1","collapsible_map_control_component_1","base_map_selection_component_1","simple_tree_node_component_1","simple_tree_component_1","catalog_component_1","date_selection_component_1","layer_properties_component_1","layer_control_component_1","theme_navbar_component_1","wms_layer_component_1","map_legend_component_1","map_control_component_1","services","geocoding_service_1","MapWaldBootstrapModule","forRoot","moduleInitialisation","ngModule","MapWaldBootstrapModule_1","providers","imports","common_1","forms_1","http_1","ngx_pipes_1","declarations","esm5"],"mappings":"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","sourcesContent":["import { Component, OnInit, AfterViewInit, Input,\n         OnChanges, SimpleChanges, OnDestroy } from '@angular/core';\nimport {GoogleMapsAPIWrapper} from '@agm/core';\nimport {WMSService} from 'map-wald';\n\n@Component({\n  selector: 'wms-layer',\n  template:'',\n})\nexport class WMSLayerComponent implements OnInit, OnDestroy{\n  @Input() url: string;\n  @Input() params:any;\n  @Input() opacity:number=1.0;\n  @Input() position:number=0;\n\n  constructor(private _wmsService:WMSService,\n              public _wrapper:GoogleMapsAPIWrapper) {}\n  map: any;\n  overlay:any;\n  zoom: number = 4;\n\n  private building:boolean=false;\n  buildMap(){\n    if(this.building)\n      return;\n    this.building=true;\n\n    this._wrapper.getNativeMap().then((theMap)=>{\n      this.building=false;\n      this.map = theMap;\n      this.overlay = this._wmsService.buildImageMap(\n          ()=>this.map,\n          (z)=>this.url+'?',\n          (z)=>this.params,\n          ()=>this.opacity\n        );\n\n      if(this.map.overlayMapTypes.length>this.position){\n        this.map.overlayMapTypes.removeAt(this.position);\n        this.map.overlayMapTypes.insertAt(this.position,this.overlay);\n      } else {\n        while(this.map.overlayMapTypes.length<=this.position){\n          // Temporarily add replicate layers.\n          // TheseÂ should be replaced by other wms-layer components\n          this.map.overlayMapTypes.push(this.overlay);\n        }\n      }\n    }).catch((e)=>console.log(e));\n  }\n\n  ngOnInit() {\n    if(this.url){\n      this.buildMap();\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if(this.url){\n      this.buildMap();\n    }\n    // let currentOpacity: number = changes.opacity.currentValue;\n    // let previousOpacity: number = changes.opacity.previousValue;\n\n    // if (currentOpacity !== previousOpacity) {\n    //   console.log('building a map off my own bat');\n    //   this.buildMap();\n    // }\n  }\n\n  ngOnDestroy(): void {\n    this._wrapper.getNativeMap().then((theMap)=>{\n      if(this.map.overlayMapTypes.length>this.position){\n        this.map.overlayMapTypes.removeAt(this.position);\n      }\n    });\n  }\n}\n","import { Component, OnInit, AfterViewInit, Input } from '@angular/core';\nimport { PaletteService } from 'map-wald';\n\n@Component({\n  selector: 'map-legend',\n  template: `<div class=\"map-legend panel panel-group\">\n\n<strong>{{title}} <span *ngIf=\"mapUnits\" [innerHTML]=\"'('+mapUnits+')'\"></span>\n        <span *ngIf=\"helpText\"\n              [ngbTooltip]=\"helpText\"\n              [placement]=\"tooltipPlacement\"\n              container=\"body\">\n          <i class=\"fa fa-info-circle\"></i>\n        </span>\n</strong>\n\n  <div *ngIf=\"!imageURL\">\n    <div style=\"display:table;line-height:15px\">\n      <div style=\"display:table-row;padding:0;\"\n          *ngFor=\"let colour of colours; let i=index\">\n        <div class=\"legend-colour\">\n          <i class=\"legend-entry\" [ngStyle]=\"{background:colour}\"></i>\n        </div>\n        <div class=\"legend-label\">\n          <span [innerHTML]=\"generatedLabels[i]\"></span>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div *ngIf=\"imageURL\">\n    <img [src]=\"imageURL\">\n  </div>\n  <p *ngIf=\"attributionLink\">Source: <a [href]=\"attributionLink\">{{attribution || 'details'}}</a></p>\n  <p *ngIf=\"attribution&&!attributionLink\">Source: {{attribution}}</p>\n</div>\n`,styles: [`\n.map-legend{\n  display:block;\n  background: white;\n}\n\n.legend-colour{\n  display:table-cell;\n  padding:0px;\n}\n\n.legend-label{\n  display:table-cell;\n  padding:0px 4px 2px 2px;\n  font-size:10px;\n  vertical-align:middle;\n}\n\n.legend-entry {\n  float: left;\n  width: 15px !important;\n  height: 15px !important;\n}\n`]})\nexport class MapLegendComponent implements OnInit {\n  @Input() imageURL: string\n  @Input() colours: Array<string> = ['red', 'white', 'blue'];\n  @Input() labels: Array<string> = [];//['-','-','-'];\n  @Input() title: string = 'the title';\n  @Input() mapUnits :string = '';\n  @Input() helpText:string='No comment';\n  @Input() tooltipPlacement:string='right';\n  @Input() attribution: string;\n  @Input() attributionLink: string;\n\n  generatedLabels: string[] = [];\n  _cbPalette:string\n  _cbCount:number;\n  _cbReverse:boolean;\n  _cbRange:Array<number>;\n\n  @Input() set cbPalette(cbp:string){\n    this._cbPalette = cbp;\n    this.generatePalette();\n  }\n\n  get cbPalette():string{return this._cbPalette;}\n\n  @Input() set cbCount(cbc:number){\n    this._cbCount=cbc;\n    this.generatePalette();\n  }\n\n  get cbCount():number{return this._cbCount;}\n\n  @Input() set cbReverse(cbr:boolean){\n    this._cbReverse=cbr;\n    this.generatePalette();\n  }\n\n  get cbReverse():boolean{return this._cbReverse;}\n\n  @Input() set cbRange(cbr:Array<number>){\n    this._cbRange = cbr;\n    this.generatePalette();\n  }\n\n  get cbRange():Array<number>{return this._cbRange;}\n\n  generateLabels(count:number):Array<string>|null{\n    if(!this._cbRange||!count){\n      return null;\n    }\n\n    var delta = (this._cbRange[1]-this._cbRange[0])/(count-1);\n    var result = [];\n    var lower=this._cbRange[0];\n    let  decimalPlaces = Math.max(0,2-(+Math.log10(this._cbRange[1]-this._cbRange[0]).toFixed()));\n    decimalPlaces = Math.min(decimalPlaces,10);\n    var upper;\n    for(let i=1;i<count;i++){\n      upper = this._cbRange[0]+i*delta;\n      result.push(`${this.formatValue(lower,decimalPlaces)}-${this.formatValue(upper,decimalPlaces)}`);\n      lower = upper;\n    }\n    result.push('&ge;'+this._cbRange[1]);\n    result.reverse();\n    return result;\n  }\n\n  generatePalette(){\n    if(!this._cbPalette||!this._cbCount){\n      return;\n    }\n\n    this._palettes.getPalette(this._cbPalette,this._cbReverse,this._cbCount)\n      .subscribe(palette=>{\n        this.colours = palette.slice().reverse();\n        this.generatedLabels = this.labels || this.generateLabels(this.colours.length) || palette;\n    });\n  }\n\n  formatValue = function(val:number,decimalPlaces:number):string{\n    if(!val){\n      if(val===0){\n        return '0';\n      }\n      return '-';\n    }\n    // Add thousand's separator. Source: http://stackoverflow.com/a/2901298\n    var parts = val.toString().split(\".\");\n    parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n\n    if(decimalPlaces===0){\n      return parts[0];\n    }\n\n    if((decimalPlaces!==null) &&(decimalPlaces!==undefined) && (parts.length===2)){\n      parts[1] = parts[1].substr(0,decimalPlaces);\n      parts[1] = parts[1].replace(/0+$/, '');\n    }\n    return parts.join('.');\n  };\n\n  constructor(private _palettes:PaletteService) { }\n\n  ngOnInit() { }\n\n}\n","import { Component, ElementRef, OnInit, ViewChild, AfterViewInit, Input } from '@angular/core';\nimport {GoogleMapsAPIWrapper} from '@agm/core';\n\n@Component({\n  selector: 'map-control',\n  template: `<div #mapControl class=\"map-control-content\">\n  <ng-content></ng-content>\n</div>\n`,styles: [`.map-control-content{\n  background: transparent;\n}\n`],\n})\nexport class MapControlComponent implements OnInit,AfterViewInit {\n  @ViewChild('mapControl',{static:false}) mapControl: Component;\n  @Input() position:string = 'TOP_RIGHT';\n\n  constructor(private _el:ElementRef, public _wrapper:GoogleMapsAPIWrapper) { }\n\n  ngOnInit() {\n  }\n\n  ngAfterViewInit(){\n    this._wrapper.getNativeMap().then((m)=>{\n      let content: HTMLElement = this._el.nativeElement.querySelector('.map-control-content');\n\n      // If content of the map control is not already wrapped in a div, do it\n      // now.\n      if (content.nodeName !== \"DIV\") {\n        let controlDiv: HTMLElement = document.createElement('div');\n        controlDiv.appendChild(content);\n        content = controlDiv;\n      }\n\n      (<any>m).controls[(<any>window).google.maps.ControlPosition[this.position]].push(content);\n    });\n  }\n\n}\n","import { Component, Input, ViewChild, AfterViewInit, ElementRef, Output, OnChanges, SimpleChanges, EventEmitter } from '@angular/core';\n\n\ndeclare var Plotly: any;\n\n@Component({\n  selector: 'date-shifter',\n  template: `<div>\n  <h3>{{dateText}}</h3>\n  <input type=\"range\"\n         class=\"form-control\"\n         min=\"-4\"\n         [max]=\"4\"\n         step=\"1\"\n         [(ngModel)]=\"value\"\n         (ngModelChange)=\"sliderMoved()\"\n         (mouseup)=\"reset()\">\n  <h4>{{label}}</h4>\n</div>\n\n  `,\n  styles: [``]\n})\nexport class DateShifterComponent implements AfterViewInit,OnChanges  {\n  @Input() interval = 2000;\n  @Input() limits:Date[] = null;\n  @Input() date = new Date();\n  @Output() dateChange = new EventEmitter<Date>();\n\n  value = 0;\n  label = '-';\n  timer:number = 0;\n  dateText = '-';\n\n  constructor(){\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if(changes.interval){\n      this.startTimer();\n    }\n  }\n\n  startTimer(): any {\n    if(this.timer){\n      clearInterval(this.timer);\n    }\n    this.timer = window.setInterval(()=>this.tick(),this.interval);\n  }\n\n  ngAfterViewInit(){\n    this.startTimer();\n  }\n\n  reset(){\n    this.value = 0;\n    this.sliderMoved();\n  }\n\n  tick(): any {\n    if(!this.value){\n      return;\n    }\n\n    let sign = this.value < 0 ? -1 : 1;\n    this.date = new Date(this.date.getTime());\n    switch(Math.abs(this.value)){\n      case 1:\n        this.date.setDate(this.date.getDate()+sign);\n        break;\n      case 2:\n        this.date.setDate(this.date.getDate()+7*sign);\n        break;\n      case 3:\n        this.date.setMonth(this.date.getMonth()+sign);\n        break;\n      case 4:\n        this.date.setFullYear(this.date.getFullYear()+sign);\n        break;\n    }\n\n    if(this.limits&&this.limits.length){\n      if(this.date.getTime()<this.limits[0].getTime()){\n        this.date = this.limits[0];\n      }\n      if(this.date.getTime()>this.limits[1].getTime()){\n        this.date = this.limits[1];\n      }\n    }\n    this.setDateText();\n    this.dateChange.emit(this.date);\n  }\n  setDateText(): any {\n    this.dateText = this.date.toLocaleDateString();\n  }\n\n  sliderMoved(){\n    this.setLabel();\n  }\n\n  setLabel() {\n    if(this.value<0){\n      this.label = 'back 1';\n    } else if(this.value>0){\n      this.label = 'advance 1';\n    } else {\n      this.label = '-';\n    }\n\n    switch(Math.abs(this.value)){\n      case 1:\n        this.label += 'day';\n        break;\n      case 2:\n        this.label += 'week';\n        break;\n      case 3:\n        this.label += 'month';\n        break;\n      case 4:\n        this.label += 'year';\n        break;\n    }\n  }\n}\n","import { Component, Input, ViewChild, AfterViewInit, ElementRef } from '@angular/core';\nimport { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\nimport * as store from 'store';\n\n\ndeclare var Plotly: any;\n\n@Component({\n  selector: 'one-time-splash',\n  template: `<ng-template #splashTemplate let-c=\"close\" let-d=\"dismiss\">\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title\">\n      {{label}}</h4>\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"d('Cross click')\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n  <div class=\"modal-body\">\n    <ng-content></ng-content>\n  </div>\n  <div class=\"modal-footer\">\n    <label *ngIf=\"application\">\n      <input type=\"checkbox\" [(ngModel)]=\"doNotShow\" (ngModelChange)=\"doNotShowClicked()\">\n      &nbsp; {{hideMessage}}\n    </label>\n    <button type=\"button\" class=\"btn btn-secondary\" (click)=\"c('Close click')\">Close</button>\n  </div>\n  </ng-template>\n`,\n  styles: [``]\n})\nexport class OneTimeSplashComponent implements AfterViewInit  {\n  @ViewChild('splashTemplate',{static:false}) splashTemplate:any;\n  @Input() application:string;\n  @Input() label = 'About';\n  @Input() hideMessage = 'Understood, I donât need to see this again';\n  @Input() klass: string;\n  doNotShow: boolean;\n  current:NgbModalRef;\n\n  constructor(private modalService: NgbModal){\n\n  }\n\n  storageKey(){\n    if(!this.application){\n      return null;\n    }\n\n    return this.application  + '-splash-skip';\n  }\n\n  ngAfterViewInit(){\n    setTimeout(()=>{\n      const key = this.storageKey();\n      if(key){\n        this.doNotShow = store.get(key,false);\n      }\n\n      if(!this.doNotShow){\n        this.show();\n      }\n    });\n  }\n\n  show(){\n    this.current = this.modalService.open(this.splashTemplate,{\n      size:'lg',\n      windowClass:this.klass\n    });\n  }\n\n  close(){\n    if(!this.current){\n      return;\n    }\n\n    this.current.close();\n    this.current=null;\n  }\n\n  doNotShowClicked(){\n    const key = this.storageKey();\n    if(!key){\n      return;\n    }\n\n    store.set(key,this.doNotShow);\n  }\n}\n","import { Component, Input, ViewChild, AfterViewInit, ElementRef, Output, EventEmitter } from '@angular/core';\n\n\ndeclare var Plotly: any;\n\n@Component({\n  selector: 'date-element',\n  template: `<div class=\"row no-gutters\">\n  <div class=\"col-4\">{{label}}</div>\n  <div class=\"col-2\">\n    <button class=\"btn btn-secondary btn-sm\" (click)=\"move(-step)\">\n      <i class=\"fa fa-angle-left\"></i>\n    </button>\n  </div>\n  <div class=\"col-4\"><button class=\"btn btn-link btn-sm\">{{src[property]}}</button></div>\n  <div class=\"col-2\">\n    <button class=\"btn btn-secondary btn-sm\" (click)=\"move(step)\">\n      <i class=\"fa fa-angle-right\"></i>\n    </button>\n  </div>\n</div>\n`,styles: []})\nexport class DateElementComponent implements AfterViewInit  {\n  @Input() label:string;\n  @Input() property:string;\n  @Input() src:any;\n  @Input() step = 1;\n  @Output() changed = new EventEmitter<any>();\n  \n  constructor(){\n\n  }\n\n  ngAfterViewInit(){\n\n  }\n\n  move(n:number){\n    this.src[this.property] += n;\n    this.changed.emit(this.src);\n  }\n}\n","import { Component, Input, ViewChild, AfterViewInit, ElementRef } from '@angular/core';\n\n\ndeclare var Plotly: any;\n\n@Component({\n  selector: 'share-view',\n  template: `<button class=\"btn btn-secondary btn-sm\"\n        ngbTooltip=\"Share current view\"\n        placement=\"right\"\n        [disabled]=\"true\"\n><i class=\"fa fa-share-alt\"></i></button>\n`,styles: []})\nexport class ShareViewComponent implements AfterViewInit  {\n\n  constructor(){\n\n  }\n\n  ngAfterViewInit(){\n\n  }\n}","import { Component, Input, ViewChild, AfterViewInit, ElementRef } from '@angular/core';\n\n\ndeclare var Plotly: any;\n\n@Component({\n  selector: 'location-search',\n  template: `<button class=\"btn btn-secondary btn-sm\"\n        ngbTooltip=\"Location search\"\n        placement=\"right\"\n        [disabled]=\"true\"\n\n><i class=\"fa fa-search\"></i></button>\n`,styles: []})\nexport class LocationSearchComponent implements AfterViewInit  {\n\n  constructor(){\n\n  }\n\n  ngAfterViewInit(){\n\n  }\n}","import { Component, Input, ViewChild, AfterViewInit, OnChanges, SimpleChanges,\n         Output, EventEmitter, ViewChildren, QueryList, NgZone } from '@angular/core';\nimport { MappedLayer, Bounds, LayerSelection, StaticDataService, MetadataService  } from 'map-wald';\nimport { DataMouseEvent, LatLng, AgmMap, AgmInfoWindow} from '@agm/core';\nimport { Feature, Point, GeometryObject } from 'geojson';\nimport { MapTypeControlOptions, ControlPosition } from '@agm/core/services/google-maps-types';\n\nexport interface SimpleMarker {\n  loc:LatLng;\n  value:string;\n  open:boolean;\n  iconUrl:string;\n}\n\n@Component({\n  selector: 'layered-map',\n  template: `<agm-map #theMap\n[(latitude)]=\"lat\"\n[(longitude)]=\"lng\"\n[(zoom)]=\"zoom\"\n(zoomChange)=\"zoomChanged()\"\n[disableDefaultUI]=\"false\"\n[zoomControl]=\"false\"\n[mapTypeId]=\"mapTypeId\"\n[mapTypeControl]=\"showMapType\"\n[mapTypeControlOptions]=\"mapTypeOptions\"\n[streetViewControl]=\"streetViewControl\"\nscaleControl=\"true\"\n[fitBounds]=\"_bounds\"\n(mapClick)=\"mapClick($event)\">\n\n<agm-marker *ngFor=\"let marker of markers\"\n            [longitude]=\"marker.loc.lng\"\n            [latitude]=\"marker.loc.lat\"\n            [iconUrl]=\"marker.iconUrl\">\n  <agm-info-window #infoWindows [disableAutoPan]=\"true\">\n    <strong>{{marker.value}}</strong>\n  </agm-info-window>\n</agm-marker>\n\n<ng-container *ngFor=\"let mp of layers.slice()|reverse; let i = index\" [ngSwitch]=\"mp.layerType\">\n  <wms-layer *ngSwitchCase=\"'wms'\"\n    [url]=\"mp.url\"\n    [params]=\"mp.wmsParameters\"\n    [opacity]=\"mp.opacity\"\n    [position]=\"mp.options.position\">\n  </wms-layer>\n  <agm-data-layer *ngSwitchCase=\"'vector'\"\n                [geoJson]=\"mp.staticData\"\n                [style]=\"mp._styleFunc\"\n                (layerClick)=\"clicked($event)\"\n\n                >\n  </agm-data-layer>\n\n  <ng-container *ngSwitchCase=\"'circle'\">\n    <agm-circle *ngFor=\"let f of mp.staticData.features; let j=index\"\n                [latitude]=\"f.geometry.coordinates[1]\"\n                [longitude]=\"f.geometry.coordinates[0]\"\n                [radius]=\"10000000/(zoom*zoom*zoom*zoom)\"\n                [fillColor]=\"mp.flattenedSettings?.styles?.fillColor||'black'\"\n                [fillOpacity]=\"mp.flattenedSettings?.styles?.fillOpacity||1\"\n                [strokeColor]=\"mp.flattenedSettings?.styles?.strokeColor||'black'\"\n                [strokeOpacity]=\"mp.flattenedSettings?.styles?.strokeOpacity||1\"\n                [strokePosition]=\"0\"\n                [strokeWeight]=\"(f===selectedFeature)?3:(mp.flattenedSettings?.styles?.strokeWeight||0.5)\"\n                (circleClick)=\"circleClicked(mp,f)\"\n                >\n    </agm-circle>\n  </ng-container>\n\n  <!--\n  -->\n</ng-container>\n\n<!-- for map controls -->\n<map-control position=\"TOP_CENTER\">\n    <ng-content select=\".map-control.top-center\"></ng-content>\n</map-control>\n\n<map-control position=\"TOP_LEFT\">\n    <ng-content select=\".map-control.top-left\"></ng-content>\n</map-control>\n\n<map-control position=\"TOP_RIGHT\">\n    <ng-content select=\".map-control.top-right\"></ng-content>\n</map-control>\n\n<map-control position=\"LEFT_TOP\">\n    <ng-content select=\".map-control.left-top\"></ng-content>\n</map-control>\n\n<map-control position=\"RIGHT_TOP\">\n    <ng-content select=\".map-control.right-top\"></ng-content>\n</map-control>\n\n<map-control position=\"LEFT_CENTER\">\n    <ng-content select=\".map-control.left-center\"></ng-content>\n</map-control>\n\n<map-control position=\"RIGHT_CENTER\">\n    <ng-content select=\".map-control.right-center\"></ng-content>\n</map-control>\n\n<map-control position=\"LEFT_BOTTOM\">\n    <ng-content select=\".map-control.left-bottom\"></ng-content>\n</map-control>\n\n<map-control position=\"RIGHT_BOTTOM\">\n    <ng-content select=\".map-control.right-bottom\"></ng-content>\n</map-control>\n\n<map-control position=\"BOTTOM_CENTER\">\n    <ng-content select=\".map-control.bottom-center\"></ng-content>\n</map-control>\n\n<map-control position=\"BOTTOM_LEFT\">\n    <ng-content select=\".map-control.bottom-left\"></ng-content>\n</map-control>\n\n<map-control position=\"BOTTOM_RIGHT\">\n    <ng-content select=\".map-control.bottom-right\"></ng-content>\n</map-control>\n\n</agm-map>\n\n`,styles: []})\nexport class LayeredMapComponent implements AfterViewInit, OnChanges {\n  @Input() layers: Array<MappedLayer> = [];\n  @Input() markers:Array<SimpleMarker> = [];\n  @Input() mapTypeId:string='roadmap';\n\n  @Output() layersChange = new EventEmitter<Array<MappedLayer>>();\n  @Output() featureSelected = new EventEmitter<{feature:Feature<GeometryObject>,layer?:MappedLayer}>();\n  @Output() pointSelected = new EventEmitter<LatLng>();\n  @Input() mapTypePosition:number = ControlPosition.BOTTOM_LEFT\n  @Input() streetViewControl = true;\n\n  @ViewChild(AgmMap,{static:false}) theMap:AgmMap;\n  @ViewChildren('infoWindows') infoWindows:QueryList<AgmInfoWindow>;\n\n  selectedFeature:any = null;\n  // google maps zoom level\n  @Input() zoom: number = 4;\n  @Input() showMapType = true;\n  mapTypeOptions: MapTypeControlOptions={\n    position:ControlPosition.BOTTOM_LEFT\n  };\n\n  // initial center position for the map\n  @Input() lat: number = -22.673858;\n  @Input() lng: number = 129.815982;\n  @Input() bounds:Bounds;\n  _bounds:Bounds;\n\n  constructor(private _zone:NgZone,\n              private staticData:StaticDataService,\n              private metadata:MetadataService) {\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    // if zoom in changes...\n    if(changes.mapTypePosition){\n      if(this.mapTypePosition===null){\n        this.showMapType = false;\n      }\n      this.mapTypeOptions = {\n        position:this.mapTypePosition\n      };\n    }\n\n    if(changes.layers){\n      this.setLayerPositions();\n    }\n\n    if(changes.markers&&this.markers){\n      // deal with existing info windows?\n      if(this.infoWindows){\n          this.infoWindows.forEach((w,i)=>{\n          this._zone.runOutsideAngular(()=>w.close());\n        });\n      }\n\n      setTimeout(()=>{\n        // Check and open relevant info windows...\n        this.infoWindows.forEach((w,i)=>{\n          let m = this.markers[i];\n          if(m.open){\n            this._zone.runOutsideAngular(()=>w.open());\n          } else {\n            this._zone.runOutsideAngular(()=>w.close());\n          }\n        });\n      });\n    }\n\n    if(changes.bounds){\n      setTimeout(()=>this._bounds=this.bounds);\n    }\n  }\n\n  ngAfterViewInit() {\n  }\n\n  layersChanged(changes: Array<MappedLayer>) {\n  }\n\n  layerAdded(selection: LayerSelection) {\n    var ex = this.layers.find(l => l.layer === selection.layer);\n    if (ex) {\n      return;\n    }\n\n    var mapped = new MappedLayer();\n    mapped.layer = selection.layer;\n\n    mapped.layerType = 'wms';\n    mapped.options.legend = true;\n\n    if(selection.layer.options.vectors){\n      this.staticData.get(selection.layer.options.host,selection.layer.options.filepath).subscribe(\n        (data:any)=>{\n          mapped.staticData=data;\n          this.activateLayer(mapped,selection);\n        });\n    } else {\n      this.activateLayer(mapped, selection);\n    }\n  }\n\n  private activateLayer(mapped: MappedLayer, selection: LayerSelection) {\n    mapped.update();\n    if (selection.action === 'replace') {\n      if(selection.filter){\n        this.layers = this.layers.filter(ml=>!selection.filter(ml));\n      } else {\n        this.layers = [];\n      }\n    }\n    this.layers = [mapped].concat(this.layers);\n    this.setLayerPositions();\n    this.layersChange.emit(this.layers);\n  }\n\n  setLayerPositions(){\n    let ix=0;\n    for(var i=this.layers.length-1;i>=0;i--){\n      if(this.layers[i].layerType==='wms'){\n        this.layers[i].options.position=ix;\n        ix++;\n      }\n    }\n  }\n  extractFeature(f:any) : Feature<Point>{\n    var geo = f.getGeometry();\n    geo = {\n      type:'Point',\n      coordinates:geo.get(0)\n    }\n\n    var props:{[key:string]:any} = {};\n    f.forEachProperty((val:any,prop:string)=>props[prop]=val);\n\n    return {\n      type:'Feature',\n      geometry:geo,\n      properties:props\n    };\n  }\n\n  clicked(event:DataMouseEvent){\n    var feature = this.extractFeature(event.feature);\n    this.selectedFeature = feature;\n    this.featureSelected.emit({feature:feature});\n  }\n\n  circleClicked(ml:MappedLayer,feature:any){\n    this.selectedFeature = feature;\n    this.featureSelected.emit({feature:feature,layer:ml});\n  }\n\n  mapClick(event:any){\n    var coords:LatLng = event.coords;\n    this.pointSelected.emit(coords);\n  }\n\n  zoomToBounds(bounds:Bounds){\n    this._bounds = bounds;\n  }\n\n  zoomChanged(){\n    this.layers = this.layers.slice();\n  }\n}\n","import { Component, Input, ViewChild, AfterViewInit, ElementRef } from '@angular/core';\nimport { LayeredMapComponent } from '../../layered-map/layered-map.component';\nimport { MappedLayer, Bounds } from 'map-wald';\n\n\ndeclare var Plotly: any;\n\n@Component({\n  selector: 'zoom-layer',\n  template: `<button type=\"button\" [disabled]=\"!layer\" class=\"btn btn-secondary btn-sm\"\n        ngbTooltip=\"Zoom to selected layer\"\n        placement=\"right\"\n        (click)=\"zoomToLayer()\"\n><i class=\"fa fa-compress\"></i>\n</button>\n`,styles: []})\nexport class ZoomLayerComponent implements AfterViewInit {\n  @Input() map: LayeredMapComponent;\n  @Input() layer: MappedLayer;\n  @Input() fullBounds: Bounds;\n\n  constructor() {\n\n  }\n\n  ngAfterViewInit() {\n\n  }\n\n  zoomToLayer() {\n    if(this.layer.layer.spatialExtent){\n      console.log('Zoom to layer');\n      this.layer.layer.spatialExtent.subscribe(b=>{\n        this.map.zoomToBounds(Object.assign({},b));\n      });\n    } else {\n      console.log('Zoom full');\n      this.map.zoomToBounds(Object.assign({}, this.fullBounds));\n    }\n  }\n}\n","import { Component, Input, ViewChild, AfterViewInit, ElementRef } from '@angular/core';\nimport { LayeredMapComponent } from '../../layered-map/layered-map.component';\nimport { Bounds } from 'map-wald';\n\n\ndeclare var Plotly: any;\n\n@Component({\n  selector: 'zoom-full',\n  template: `<button class=\"btn btn-secondary btn-sm\"\n        ngbTooltip=\"Zoom to full extent\"\n        placement=\"right\"\n        (click)=\"zoomToBounds()\"\n><i class=\"fa fa-arrows-alt\"></i></button>\n`,styles: []})\nexport class ZoomFullComponent implements AfterViewInit  {\n  @Input() map:LayeredMapComponent;\n  @Input() bounds:Bounds;\n\n  constructor(){\n\n  }\n\n  ngAfterViewInit(){\n\n  }\n\n  zoomToBounds(){\n    this.map.zoomToBounds(Object.assign({},this.bounds));\n  }\n}\n","import { Component, Input, ViewChild, AfterViewInit, ElementRef } from '@angular/core';\nimport { LayeredMapComponent } from '../../layered-map/layered-map.component';\n\n\ndeclare var Plotly: any;\n\n@Component({\n  selector: 'zoom-out',\n  template: `<button class=\"btn btn-secondary btn-sm\"\n        ngbTooltip=\"Zoom out\"\n        placement=\"right\"\n        (click)=\"zoomOut()\"\n><i class=\"fa fa-minus\"></i></button>`,styles: []})\nexport class ZoomOutComponent implements AfterViewInit  {\n  @Input() map:LayeredMapComponent;\n  @Input() minZoom:number = 1;\n  constructor(){\n\n  }\n\n  ngAfterViewInit(){\n\n  }\n\n  zoomOut(){\n    if(!this.map){\n      return;\n    }\n    this.map.zoom = Math.max(this.minZoom, this.map.zoom - 1);\n  }\n}\n","import { Component, Input, ViewChild, AfterViewInit, ElementRef } from '@angular/core';\nimport { LayeredMapComponent } from '../../layered-map/layered-map.component';\n\n\ndeclare var Plotly: any;\n\n@Component({\n  selector: 'zoom-in',\n  template: `<button class=\"btn btn-secondary btn-sm\"\n        ngbTooltip=\"Zoom in\"\n        placement=\"right\"\n        (click)=\"zoomIn()\"\n><i class=\"fa fa-plus\"></i></button>`,styles: []})\nexport class ZoomInComponent implements AfterViewInit  {\n  @Input() map:LayeredMapComponent;\n  @Input() maxZoom:number = 32;\n\n  constructor(){\n\n  }\n\n  ngAfterViewInit(){\n\n  }\n\n  zoomIn(){\n    if(!this.map){\n      return;\n    }\n    this.map.zoom = Math.min(this.maxZoom,this.map.zoom+1);\n  }\n}\n","import { Component, Input, ViewChild, AfterViewInit, ElementRef, OnChanges, SimpleChanges } from '@angular/core';\nimport { LayeredMapComponent } from '../../layered-map/layered-map.component';\n\nexport interface BaseLayer {\n  map_type_id: string;\n  label: string;\n  icon?: string;\n}\n\ndeclare var Plotly: any;\n\n@Component({\n  selector: 'cycle-base-map',\n  template: `<button class=\"btn btn-secondary btn-sm\" (click)=\"toggleBaseLayer()\" [ngbTooltip]=\"tooltip\"\n                     placement=\"right\">\n  <i class=\"fa\" [ngClass]=\"baseLayer?.label==='Road Map'?'fa-road':'fa-globe'\"></i>\n</button>`,styles: []})\nexport class CycleBaseMapComponent implements AfterViewInit, OnChanges  {\n  @Input() map:LayeredMapComponent;\n  @Input() maxZoom:number = 32;\n  @Input() baseLayers:BaseLayer[] = [\n    {\n      map_type_id : 'roadmap',\n      label : 'Road Map'\n    },\n    {\n      map_type_id : 'satellite',\n      label : 'Satellite'\n    }\n  ]\n  @Input() baseLayer:BaseLayer;\n  @Input() tooltip = 'Toggle base layer';\n\n  constructor(){\n\n  }\n\n  ngAfterViewInit(){\n\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if(this.baseLayers && !this.baseLayer){\n      this.baseLayer = this.baseLayers[0];\n    }\n  }\n\n  toggleBaseLayer(){\n    if(!this.map){\n      return;\n    }\n\n    let current = this.baseLayers.findIndex(l=>l.map_type_id===this.baseLayer.map_type_id);\n    let next = (current+1)%this.baseLayers.length;\n    this.baseLayer = this.baseLayers[next];\n\n    this.map.mapTypeId = this.baseLayer ?\n                                this.baseLayer.map_type_id:\n                                null;\n  }\n}\n","import { Component, Input, ViewChild, AfterViewInit, ElementRef, OnChanges, SimpleChanges } from '@angular/core';\nimport { LayeredMapComponent } from '../../layered-map/layered-map.component';\n\n\ndeclare var Plotly: any;\n\n@Component({\n  selector: 'cycle-opacity',\n  template: `<button class=\"btn btn-secondary btn-sm\"\n                     (click)=\"cycleTransparency()\"\n                     [ngbTooltip]=\"tooltip\"\n                     placement=\"right\">\n<i class=\"fa\" [ngClass]=\"(layerOpacity<0.5)?'fa-circle-o':((layerOpacity<0.9)?'fa-adjust':'fa-circle')\"></i>\n</button>`,styles: []})\nexport class CycleOpacityComponent implements AfterViewInit, OnChanges  {\n  @Input() map:LayeredMapComponent;\n  @Input() maxZoom = 32;\n  @Input() tooltip = 'Adjust transparency of grid layer';\n  @Input() layerOpacity = 1.0;\n  @Input() step = 0.4;\n\n  constructor(){\n\n  }\n\n  ngAfterViewInit(){\n\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if(this.map){\n      this.map.layersChange.subscribe(()=>this.updateLayers());\n    }\n  }\n\n  cycleTransparency(){\n    this.layerOpacity -= this.step;\n    if(this.layerOpacity<0){\n      this.layerOpacity = 1.0;\n    }\n    this.updateLayers();\n  }\n\n  private updateLayers() {\n    this.map.layers.forEach(l => l.opacity = this.layerOpacity);\n  }\n}\n","import { Component, Input, ViewChild, AfterViewInit, ElementRef } from '@angular/core';\n\n\ndeclare var Plotly: any;\n\n@Component({\n  selector: 'button-bar',\n  template: `<div class=\"button-bar bb-vertical\">\n  <ng-content></ng-content>\n</div>\n\n`,styles: [`\n`]})\nexport class ButtonBarComponent implements AfterViewInit  {\n\n  constructor(){\n\n  }\n\n  ngAfterViewInit(){\n\n  }\n}","/// <reference path=\"../decs.d.ts\" />\n\nimport { Component, Input, ViewChild, AfterViewInit, ElementRef, OnChanges, SimpleChanges } from '@angular/core';\nimport { TimeSeries } from 'map-wald';\n//import * as Plotly from 'plotly.js/dist/plotly-basic';\n\n//declare var Plotly: any;\n//const Plotly = require('plotly.js/dist/plotly-basic');\n\nimport * as Plotly from 'plotly.js/dist/plotly-basic';\n// import * as Plotly from 'plotly.js';\n\n@Component({\n  selector: 'timeseries-chart',\n  template: `<div class=\"our-chart\">\n</div>\n`,styles: []})\nexport class TimeseriesChartComponent implements AfterViewInit, OnChanges  {\n  @Input() title:string;\n  @Input() timeSeries: Array<TimeSeries> = [];\n  @Input() marginLeft:number = 40;\n  @Input() marginRight:number = 10;\n  @Input() marginTop:number = 0;\n  @Input() marginBottom:number = 20;\n  @Input() titlefont:any = undefined;\n\n  constructor(private _element:ElementRef){\n\n  }\n\n  ngAfterViewInit(){\n    this.draw();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.draw();\n  }\n\n  draw(){\n    var node = this._element.nativeElement.querySelector('.our-chart');\n\n    Plotly.purge(node);\n\n        if(!this.timeSeries || !this.timeSeries.length){\n      return;\n    }\n\n    const seriesUnits = this.timeSeries.map(ts=>ts.units);\n    let commonUnits:string;\n    if(seriesUnits.every(u=>u===seriesUnits[0])){\n      commonUnits = seriesUnits[0];\n    }\n\n    var layout:any = {\n      margin: {\n        t: this.marginTop + (this.title?30:0),\n        l:this.marginLeft,\n        r:this.marginRight,\n        b:this.marginBottom\n      },\n      yaxis:{\n        fixedrange: true,\n        title:commonUnits\n      },\n      width:320,\n      height:200,\n      title:this.title || undefined,\n      titlefont:this.titlefont\n    };\n\n    Plotly.plot( node, this.timeSeries.map(ts=>{\n      const nonNullCount = ts.values.filter(v=>!isNaN(v)).length;\n      const mode = ((ts.style!=='bar')&&(nonNullCount<365)) ?\n                   'lines+markers' :\n                   undefined;\n      const suffix = commonUnits?'':` (${ts.units})`;\n      return {\n        type:(ts.style==='bar')?'bar':undefined,\n        mode:mode,\n        x:ts.dates,\n        y:ts.values,\n        name:ts.label+suffix\n      };\n    }), layout );\n  }\n}\n","import { Component, Input, AfterViewInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { LayerPropertyStyle } from 'map-wald';\n\n@Component({\n  selector: 'feature-table',\n  template: `<table *ngIf=\"feature\" class=\"table table-striped table-sm feature-table\">\n  <thead>\n    <tr>\n      <td><strong>Property</strong></td>\n      <td><strong>Value</strong></td>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><strong>Geometry</strong></td>\n      <td>{{feature.geometry.type}}</td>\n    </tr>\n    <tr *ngFor=\"let prop of _keys(feature.properties)\">\n      <td><strong>{{prop}}</strong></td>\n      <td *ngIf=\"!styles||!styles[prop]\">{{feature.properties[prop]}}</td>\n      <td *ngIf=\"styles&&styles[prop]\">\n        <a *ngIf=\"styles[prop].hyperlink\" target=\"_blank\" [href]=\"feature.properties[prop]\">\n          {{feature.properties[prop]}}\n        </a>\n      </td>\n    </tr>\n  </tbody>\n</table>`,styles: [`.feature-table{\n  max-width:300px;\n}`]})\nexport class FeatureTableComponent implements AfterViewInit, OnChanges {\n  @Input() feature: any;\n  @Input() styles: {[key:string]:LayerPropertyStyle} = {}\n  _keys = Object.keys;\n\n  constructor(){\n\n  }\n\n  ngAfterViewInit(){\n\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if(!this.styles){\n      this.styles = {};\n    }\n  }\n}\n","import { Component, Input, ViewChild, AfterViewInit, ElementRef } from '@angular/core';\n\n\ndeclare var Plotly: any;\n\n@Component({\n  selector: 'collapsible-map-control',\n  template: `<div class=\"card map-control collapsible-control\">\n    <a (click)=\"isCollapsed = !isCollapsed\">\n      <div class=\"card-header\">\n        <h6 class=\"mb-0\">\n          {{heading}}\n          <span *ngIf=\"isCollapsed\" class=\"float-right fa fa-caret-up\n            collapse-arrow\" aria-hidden=\"true\"></span>\n          <span *ngIf=\"!isCollapsed\" class=\"float-right fa fa-caret-down\n            collapse-arrow\" aria-hidden=\"true\"></span>\n        </h6>\n      </div>\n    </a>\n\n    <div class=\"ngbCollapse\" [ngbCollapse]=\"isCollapsed\">\n      <ng-content></ng-content>\n    </div>\n  </div>\n`,styles: [`.collapsible-control{\n  margin:3px;\n}`]})\nexport class CollapsibleMapControlComponent implements AfterViewInit  {\n  @Input() isCollapsed: boolean;\n  @Input() heading: string;\n  @Input() direction: string;\n\n  constructor(){\n\n  }\n\n  ngAfterViewInit(){\n\n  }\n}","import { Component, Input, ViewChild, AfterViewInit, ElementRef } from '@angular/core';\n\n\ndeclare var Plotly: any;\n\n@Component({\n  selector: 'base-map-selection',\n  template: `<p>base-map-selection Component</p>`,styles: []})\nexport class BaseMapSelectionComponent implements AfterViewInit  {\n\n  constructor(){\n\n  }\n\n  ngAfterViewInit(){\n\n  }\n}","import { Component, Input, ViewChild, AfterViewInit, ElementRef,\n  EventEmitter, Output, OnChanges, SimpleChanges } from '@angular/core';\nimport { TreeModel } from 'map-wald';\n\ndeclare var Plotly: any;\n\n@Component({\n  selector: 'simple-tree-node',\n  template: `<a href=\"#\"\n                (click)=\"treeClick($event)\"\n                [ngClass]=\"tree.klass\"><i [ngClass]=\"icon\"></i>\n  &nbsp;\n  <span ngbTooltip=\"{{tree.tooltip | async}}\"\n        placement=\"right\"\n        container=\"body\">{{tree.label}}</span>\n  <span *ngIf=\"tree.actions\"\n        class=\"float-right\">\n      &nbsp;\n      <i *ngFor=\"let a of tree.actions\"\n       [ngClass]=\"a.icon\"\n       ngbTooltip=\"{{a.tooltip | async}}\"\n       placement=\"right\"\n       container=\"body\"\n       (click)=\"a.action(tree)\">&nbsp;</i>\n  </span>\n</a>\n`,styles: []})\nexport class SimpleTreeNodeComponent implements AfterViewInit, OnChanges{\n  ngOnChanges(changes: SimpleChanges): void {\n    this.evalState();\n  }\n\n  ngAfterViewInit(): void {\n  }\n\n  @Input() tree: TreeModel;\n  @Input() options:any = {};\n  @Output() nodeSelected = new EventEmitter();\n\n  expanded: boolean;\n  leaf: boolean;\n  collapsed: boolean;\n  icon: string;\n\n  treeClick(event: any) {\n    event.stopPropagation();\n    event.preventDefault();\n    if (!this.tree) {\n      return;\n    }\n    this.tree.expanded = !this.tree.expanded;\n    this.evalState();\n\n    if(this.tree.actions&&this.tree.actions.length){\n      this.tree.actions[0].action(this.tree);\n    } else {\n      this.nodeSelected.emit(this.tree);\n    }\n  }\n\n  private evalState() {\n    this.expanded = this.tree &&\n      this.tree.expanded &&\n      this.tree.children &&\n      this.tree.children.length > 0;\n    this.leaf = this.tree && (!this.tree.children || this.tree.children.length === 0);\n    this.collapsed = this.tree &&\n      !this.tree.expanded &&\n      this.tree.children &&\n      this.tree.children.length > 0;\n    if (this.expanded) {\n      this.icon = this.options.expandedIcon;\n    }\n    else if (this.collapsed) {\n      this.icon = this.options.collapsedIcon;\n    }\n    else {\n      this.icon = this.options.leafIcon;\n    }\n  }\n}\n","import { Component, Input, ViewChild, AfterViewInit, ElementRef, OnChanges, SimpleChanges, Output, EventEmitter } from '@angular/core';\nimport { TreeModel } from 'map-wald';\n\ndeclare var Plotly: any;\n\n@Component({\n  selector: 'simple-tree',\n  template: `<div *ngIf=\"tree&&tree.visible\" class=\"simple-tree\">\n\n  <div *ngIf=\"inner\">\n    <li ><simple-tree-node [tree]=\"tree\"\n                           [options]=\"options\"\n                           (nodeSelected)=\"childSelected($event)\"></simple-tree-node>\n      <ul *ngIf=\"tree.children&&tree.expanded\" class=\"inner-list\">\n        <simple-tree *ngFor=\"let t of tree.children\" [tree]=\"t\" [inner]=\"true\"\n                    (nodeSelected)=\"childSelected($event)\"\n                    [options]=\"options\"></simple-tree>\n      </ul>\n    </li>\n  </div>\n\n  <div *ngIf=\"!inner&&showTop\">\n    <ul class=\"outer-list\">\n      <li><simple-tree-node [tree]=\"tree\" [options]=\"options\"\n        (nodeSelected)=\"childSelected($event)\"></simple-tree-node>\n        <ul *ngIf=\"tree.children&&tree.expanded\" class=\"inner-list\">\n            <simple-tree *ngFor=\"let t of tree.children\" [tree]=\"t\" [inner]=\"true\"\n            (nodeSelected)=\"childSelected($event)\"\n            [options]=\"options\"></simple-tree>\n        </ul>\n      </li>\n    </ul>\n  </div>\n\n  <div *ngIf=\"!inner&&!showTop\">\n      <ul *ngIf=\"tree.children&&tree.expanded\" class=\"outer-list\">\n          <simple-tree *ngFor=\"let t of tree.children\" [tree]=\"t\" [inner]=\"true\"\n          (nodeSelected)=\"childSelected($event)\"\n          [options]=\"options\"></simple-tree>\n      </ul>\n    </div>\n\n</div>\n`,styles: [`\n.simple-tree ul{\n  list-style-type: none\n}\n\nul.outer-list{\n  padding-left:5px;\n}\n\nul.inner-list{\n  padding-left:15px;\n}`]})\nexport class SimpleTreeComponent implements AfterViewInit, OnChanges {\n  @Input() tree: TreeModel;\n  @Input() showTop: boolean = true;\n  @Input() inner: boolean;\n\n  @Input() collapsedIcon = 'fa fa-caret-right';\n  @Input() expandedIcon = 'fa fa-caret-down';\n  @Input() leafIcon = 'fa fa-minus';\n\n  @Output() nodeSelected = new EventEmitter();\n\n  @Input() options:any = {};\n\n  constructor() {\n\n  }\n\n  ngAfterViewInit() {\n\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if(changes.options){\n      return;\n    }\n\n    this.options = {\n      collapsedIcon:this.collapsedIcon,\n      expandedIcon:this.expandedIcon,\n      leafIcon:this.leafIcon\n    };\n  }\n\n  childSelected(node:TreeModel){\n    this.nodeSelected.emit(node);\n  }\n\n}\n","import {\n  Component, Input, ViewChild, AfterViewInit, ElementRef,\n  OnChanges, Output, EventEmitter, SimpleChanges\n} from '@angular/core';\nimport { Catalog,  Layer, Theme, LayerSelection, TreeModel,\n  TreeFilterService, MetadataService, MappedLayer } from 'map-wald';\nimport { map } from 'rxjs/operators';\nimport { of } from 'rxjs';\n\ndeclare var Plotly: any;\n\nexport interface CatalogNodeAction {\n  action:string;\n  icon:string;\n  tooltip:string;\n}\n\n@Component({\n  selector: 'catalog',\n  template: `<div class=\"input-group\">\n  <span class=\"input-group-btn\">\n            <button class=\"btn\" type=\"button\" [disabled]=\"!filterText\"\n              (click)=\"filterText = ''\">\n            <i *ngIf=\"filterText\"class=\"fa fa-times\" aria-hidden=\"true\"></i>\n            <i *ngIf=\"!filterText\"class=\"fa fa-search\" aria-hidden=\"true\"></i>\n            </button>\n  </span>\n  <input #filterInput type=\"text\" class=\"form-control\" placeholder=\"Catalog search...\"\n  [(ngModel)]=\"filterText\"/>\n</div>\n\n<simple-tree\n  [tree]=\"this.filterService.filterTree(tree, filterText)\"\n  [showTop]=\"false\"\n  [leafIcon]=\"leafIcon\"\n  [collapsedIcon]=\"collapsedIcon\"\n  [expandedIcon]=\"expandedIcon\"\n  (nodeSelected)=\"nodeSelected($event)\">\n</simple-tree>\n`,styles: [`\n.node-name{\n  font-size:1em;\n}\n`],})\nexport class CatalogComponent implements AfterViewInit, OnChanges {\n  @Input() catalog: Catalog;\n  @Input() showPlaceholders = true;\n  @Input() defaultAction = 'add';\n  @Input() layerActions: CatalogNodeAction[] = [];\n  @Output() layerSelected: EventEmitter<LayerSelection> = new EventEmitter<LayerSelection>();\n  @Input() collapsedIcon = 'fa fa-caret-right';\n  @Input() expandedIcon = 'fa fa-caret-down';\n  @Input() leafIcon = 'fa fa-minus';\n\n  layers: Array<Layer> = [];\n  tree: TreeModel = { label: 'no catalog loaded' };\n  filterText = '';\n\n  filterService: TreeFilterService;\n\n  constructor(filterService: TreeFilterService, private metadata:MetadataService) {\n    this.filterService = filterService;\n  }\n\n  ngAfterViewInit() {\n    if (this.catalog) {\n      this.buildTree();\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.catalog && this.catalog) {\n      this.filterText = '';\n      this.buildTree();\n      this.highlightLayers([],this.tree);\n    }\n  }\n\n  buildTree() {\n    let self = this;\n    this.layers = [];\n    var cat = this.catalog;\n    var tree: TreeModel = {\n      label: cat.name,\n      expanded: true,\n      visible: true,\n      // settings:{\n      //   static:true,\n      //   leftMenu:false\n      // }\n    }\n\n    var deferredLayers = cat.themes.map(t => t.layers.filter(l => l.path&&!l.skip)).reduce((l, r) => l.concat(r), []);\n    var deferredThemes = cat.themes.filter(t => t.path&&!t.skip);\n\n    const treeActions = this.layerActions.map(la=>{\n      return {\n        icon:la.icon,\n        tooltip:la.tooltip,\n        action:(node: TreeModel) => this.layerClick(node.data,la.action)\n      };\n    });\n\n    const layerToTree = (l: Layer)=> {\n      let result:TreeModel = {\n        label: l.name,\n        data: l,\n        visible: true,\n        actions: treeActions\n      };\n\n      const tmp = new MappedLayer();\n      tmp.layer = l;\n      tmp.update();\n\n      if(l.description){\n        result.tooltip = of(l.description);\n      } else {\n        result.tooltip = this.metadata.getMetadata(tmp).pipe(\n          map(meta=>meta[l.descriptionField||'long_name'])\n        );\n      }\n      return result;\n    }\n\n    function themeToTree(t: Theme): TreeModel {\n      return {\n        label: t.name,\n        expanded: false,\n        visible: true,\n        children: t.layers.filter(l => !l.path&&!l.skip)\n          .filter(l=>self.showPlaceholders||!l.placeholder)\n          .map(layerToTree)\n      };\n    }\n\n    tree.children = cat.themes.filter(t => !t.path&&!t.skip).map(themeToTree);\n\n    function findParent(path: string): [TreeModel,number] {\n      var components = path.split('/');\n      var parent: TreeModel = tree;\n      var index = -1;\n\n      for (var component of components) {\n        var split = component.split('@');\n        component = split[0];\n        index = -1;\n        if(split.length>1){\n          index = +split[1];\n        }\n\n        var found = false;\n        for (var n of parent.children) {\n          if (n.label === component) {\n            parent = n;\n            found = true;\n            break;\n          }\n        }\n\n        if (!found) {\n          var newNode: TreeModel = {\n            label: component,\n            expanded: false,\n            visible: true,\n            children: []\n          };\n          addChild(parent,newNode,index);\n          parent = newNode;\n        }\n      }\n      return [parent,index];\n    }\n\n    function addChild(parent:TreeModel,child:TreeModel,i:number){\n      if(i<0){\n        parent.children.push(child);\n      } else {\n        parent.children.splice(i,0,child);\n      }\n    }\n\n    deferredThemes.forEach(t => {\n      var [parent,index] = findParent(t.path);\n      addChild(parent,themeToTree(t),index);\n    });\n\n    deferredLayers.forEach(l => {\n      var [parent,index] = findParent(l.path);\n      addChild(parent,layerToTree(l),index);\n    });\n    this.tree = tree;\n  }\n\n  layerClick(l: Layer,action:string) {\n    var selection: LayerSelection = {\n      layer: l,\n      action: action\n    };\n    this.layerSelected.emit(selection);\n  }\n\n  nodeSelected(e: TreeModel) {\n    if (!e.data) {\n      return;\n    }\n\n    var layer = <Layer>e.data;\n    this.layerClick(layer,this.defaultAction);\n  }\n\n  activeLayers(layers:Layer[]){\n    this.highlightLayers(layers,this.tree);\n  }\n\n  highlightLayers(layers:Layer[],tree:TreeModel):boolean{\n    tree.klass = null;\n\n    if(tree.data&&(layers.indexOf(tree.data)>=0)){\n      tree.klass = 'active-layer';\n      return true;\n    }\n\n    if(tree.children){\n      let activeChild = false;\n      for(let i=0;i<tree.children.length;i++){\n        activeChild = this.highlightLayers(layers,tree.children[i]) || activeChild;\n      }\n      if(activeChild){\n        tree.klass = 'active-child';\n      }\n      tree.klass = (tree.klass||'') + ' theme';\n      return activeChild;\n    }\n\n    return false;\n  }\n}\n","import { Component, Input, ViewChild, AfterViewInit, ElementRef, Output, EventEmitter } from '@angular/core';\nimport { NgbDateStruct } from \"@ng-bootstrap/ng-bootstrap\";\nimport { TimeUtilsService, InterpolationService } from \"map-wald\";\n\nconst MILLISECONDS_PER_DAY=24*60*60*1000;\n\ndeclare var Plotly: any;\n\n@Component({\n  selector: 'date-selection',\n  template: `<div class=\"date-control container-fluid\">\n  <div *ngIf=\"style!=='arrows'\" class=\"row no-gutters\">\n    <div class=\"col-8 form-group-inline\">\n        <div class=\"input-group input-group-sm\">\n          <input class=\"form-control form-control-sm\" placeholder=\"yyyy-mm-dd\"\n                 name=\"dp\" [(ngModel)]=\"dateStruct\" (ngModelChange)=\"dateStructChanged()\"\n                 ngbDatepicker #d=\"ngbDatepicker\"\n                 [maxDate]=\"maxDateStruct\" [minDate]=\"minDateStruct\">\n          <div class=\"input-group-addon\" (click)=\"d.toggle()\" >\n            <i class=\"fa fa-calendar\"></i>\n          </div>\n        </div>\n      </div>\n\n    <!--\n      <div class=\"col-2\" >\n        <button class=\"btn btn-secondary btn-sm\" [disabled]=\"atMax\"\n                (click)=\"move(1)\"><i class=\"fa fa-chevron-right\"></i></button>\n      </div>\n    -->\n  </div>\n\n  <div *ngIf=\"style==='arrows'\">\n    <date-element *ngIf=\"need.day\"   [src]=\"dateStruct\" [property]=\"'day'\" [label]=\"'Day'\"\n                  [step]=\"stepDays\"\n                  (changed)=\"dateStructChanged()\"></date-element>\n    <date-element *ngIf=\"need.month\" [src]=\"dateStruct\" [property]=\"'month'\" [label]=\"'Month'\"\n                  (changed)=\"dateStructChanged()\"></date-element>\n    <date-element *ngIf=\"need.year\"  [src]=\"dateStruct\" [property]=\"'year'\" [label]=\"'Year'\"\n                  (changed)=\"dateStructChanged()\"></date-element>\n  </div>\n</div>\n`,styles: []})\nexport class DateSelectionComponent implements AfterViewInit  {\n  @Input() date: Date;\n  @Output() dateChange = new EventEmitter();\n  @Input() timestep: string;\n  @Input() minDate: Date|string;\n  @Input() maxDate: Date|string;\n  @Input() style: ('popup'|'arrows') = 'arrows';\n  @Input() stepDays = 1;\n  @Input() referenceDate:string = null;\n\n  need = {\n    day:true,\n    month:true,\n    year:true\n  };\n\n  minDateStruct:NgbDateStruct;\n  maxDateStruct:NgbDateStruct;\n  dateStruct:NgbDateStruct;\n\n  atMax:boolean=false;\n  atMin:boolean=false;\n\n  constructor(private timeUtils: TimeUtilsService){\n\n  }\n\n  ngAfterViewInit(){\n\n  }\n\n  ngOnChanges(changes:any){\n    if(changes.minDate){\n      this.minDateStruct = this.timeUtils.convertDate(this.minDate);\n    }\n\n    if(changes.maxDate){\n      this.maxDateStruct = this.timeUtils.convertDate(this.maxDate);\n    }\n\n    if(changes.date){\n      this.dateStruct = this.timeUtils.convertDate(this.date);\n    }\n\n    if(changes.timestep){\n      this.assessDateComponents();\n    }\n    this.checkLimits();\n  }\n\n  dateStructChanged(){\n    this.date = new Date(Date.UTC(this.dateStruct.year,this.dateStruct.month-1,this.dateStruct.day));\n    // this.date.setUTCFullYear(this.dateStruct.year)\n    // this.date.setUTCMonth(this.dateStruct.month-1)\n    // this.date.setUTCDate(this.dateStruct.day);\n    this.checkReference();\n    this.dateChange.emit(this.date);\n  }\n\n  assessDateComponents(){\n    this.need.day = this.need.month = this.need.year = true;\n    if(this.timestep==='daily'){\n      return;\n    }\n    this.need.day = false;\n\n    if(this.timestep==='annual') {\n      this.need.month = false;\n    }\n  }\n\n  move(n:number){\n    this.date = new Date(this.date&&this.date.getTime());\n    this.date.setDate(this.date.getDate()+n);\n    this.onDateChanged();\n    this.dateChange.emit(this.date);\n  }\n\n  onDateChanged(){\n    this.checkLimits();\n  }\n\n  checkLimits(){\n    this.atMax = this.timeUtils.datesEqual(this.dateStruct,this.maxDateStruct);\n    this.atMin = this.timeUtils.datesEqual(this.dateStruct,this.minDateStruct);\n  }\n  // TODO not enforcing limits etc...\n\n  checkReference(): any {\n    if(!this.referenceDate){\n      return;\n    }\n\n    let refComponents = InterpolationService.interpolate(this.referenceDate,{\n      year:this.date.getFullYear(),\n      month:this.date.getMonth()+1,\n      date:this.date.getDate()\n    }).split('-').map(s=>+s);\n\n    let currentRef = new Date(Date.UTC(refComponents[0],refComponents[1]-1,refComponents[2]));\n\n    console.log('currentRef',currentRef);\n    console.log('currentDate',this.date);\n    let timeSpan = MILLISECONDS_PER_DAY * this.stepDays;\n\n    let days = (this.date.getTime() - currentRef.getTime())/timeSpan;\n    this.date = new Date(currentRef.getTime() + Math.round(days)*timeSpan);\n    this.dateStruct = this.timeUtils.convertDate(this.date);\n  }\n\n}\n","import { Component, Input, ViewChild, AfterViewInit, ElementRef, Output, EventEmitter, OnDestroy } from '@angular/core';\nimport { MappedLayer, Publication, LayerTagValue, LayerTagMap,\n  PointSelectionService, PointSelection } from 'map-wald';\nimport { LayeredMapComponent } from '../layered-map/layered-map.component';\nimport { GeometryObject, Feature } from 'geojson';\n\ndeclare var Plotly: any;\n\n@Component({\n  selector: 'layer-properties',\n  template: `<div class=\"container-fluid\">\n  <p><strong>{{layer?.title}}</strong>\n    <span *ngIf=\"layer.description()\"\n    [ngbTooltip]=\"layer.description()\"\n    [placement]=\"tooltipPlacement\"\n    class=\"layer-info-target\"\n    container=\"body\">\n  &nbsp;<i class=\"fa fa-info-circle\"></i>\n  </span>\n  &nbsp;<span *ngIf=\"layer.interpolatedDownloadURL\">\n    <small><a target=\"_blank\"\n              [href]=\"layer.interpolatedDownloadURL\"\n              [ngbTooltip]=\"'Download data'\"\n              container=\"body\">\n      <i class=\"fa fa-download\"></i>\n    </a></small>\n  </span>\n  </p>\n\n  <div *ngIf=\"layer?.layer.publications.length>1\">\n    <span *ngIf=\"layer.layer.publications[0].timestep\">Timestep </span>\n    <span *ngIf=\"!layer.layer.publications[0].timestep\">{{ layer.layer.options.publicationLabel || 'Variable' }} </span>\n    <select [(ngModel)]=\"layer.options.publication\" (ngModelChange)=\"publicationSelected($event)\">\n      <option *ngFor=\"let p of layer.layer.publications; let i=index\" [ngValue]=\"i\">{{p.label || p.timestep}}</option>\n    </select>\n  </div>\n  <div *ngIf=\"layer?.layer.publications.length===1\">\n    {{publication?.label}}\n  </div>\n\n  <div *ngIf=\"publication&&publication.timestep\">\n    <hr/>\n    <date-selection [(date)]=\"layer.options.date\"\n      (dateChange)=\"update($event)\"\n      [timestep]=\"publication.timestep\"\n      [stepDays]=\"publication.timestepMultiplier||1\"\n      [referenceDate]=\"publication.timestepReference\"\n      [minDate]=\"publication.options.start\"\n      [maxDate]=\"publication.options.end\"></date-selection>\n  </div>\n\n  <div *ngIf=\"layer.layer.options.smallExtent\">\n    <hr/>\n    <button class=\"btn btn-sm btn-primary\" (click)=\"zoomToExtent()\">Zoom to Extent</button>\n  </div>\n\n<!--\n  <div *ngIf=\"layer.layer.options.vectors\">\n    <p>Lets filter those {{layer.layer.options.vectors}}s, eh?</p>\n  </div>\n-->\n\n  <div *ngIf=\"availableTags\">\n    <div *ngFor=\"let tag of getKeys(availableTags)\">\n      {{tag}}\n      <select [(ngModel)]=\"tags[tag]\" (ngModelChange)=\"tagChanged(tag)\">\n        <option *ngFor=\"let val of availableTags[tag]\" [ngValue]=\"val.value\">{{val.label}}</option>\n      </select>\n    </div>\n  </div>\n\n  <div *ngIf=\"publication?.pointdata\">\n    Variable:\n    <select [(ngModel)]=\"selectedVariable\" (ngModelChange)=\"queryPointData()\">\n      <option *ngFor=\"let v of pointVariables\" [ngValue]=\"v.value\">{{v.label}}</option>\n    </select>\n  </div>\n  <!--\n  <div *ngIf=\"publication\">\n    <p>Start: {{publication.options.start}}</p>\n    <p>End: {{publication.options.end}}</p>\n    <p>{{publication|json}}</p>\n  </div>\n  <button (click)=\"update()\">Force update...</button>\n  -->\n</div>`, styles: []\n})\nexport class LayerPropertiesComponent implements AfterViewInit, OnDestroy {\n  getKeys = Object.keys;\n  @Input() layer: MappedLayer;\n  @Input() map: LayeredMapComponent;\n  @Output() propertyChanged = new EventEmitter();\n  @Input() tooltipPlacement: string = 'right';\n  availableTags: LayerTagMap = null;\n  tags: { [key: string]: string } = {}\n  pointVariables: LayerTagValue[] = [];\n  selectedVariable: string;\n  selectedFeature: Feature<GeometryObject>;\n  selectedFeatureSubscription: any;\n\n  constructor(private pointSelectionService: PointSelectionService) {\n\n  }\n\n  get publication(): (Publication | null) {\n    if (!this.layer || !this.layer.layer || !this.layer.layer.publications) {\n      return null;\n    }\n    return this.layer.layer.publications[this.layer.options.publication || 0];\n  }\n\n  ngAfterViewInit() {\n    // if(this.layer){\n    //   this.publication=this.layer.layer.publications[this.layer.options.publication||0];\n    // }\n    // if (this.layer &&\n    //   this.layer.layer.options.smallExtent &&\n    //   !this.layer.spatialExtent) {\n    //   this.loadExtent();\n    // }\n    if (this.map) {\n      this.selectedFeatureSubscription =\n        this.map.featureSelected.subscribe((evt: { feature: Feature<GeometryObject>, layer?: MappedLayer }) => this.featureSelected(evt));\n    }\n\n    if (this.layer) {\n      setTimeout(() => {\n        this.findTags();\n      });\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.selectedFeatureSubscription) {\n      this.selectedFeatureSubscription.unsubscribe();\n    }\n  }\n\n  featureSelected(evt: { feature: Feature<GeometryObject>, layer?: MappedLayer }) {\n    if (!this.publication || !this.publication.pointdata) {\n      return;\n    }\n    this.selectedFeature = evt.feature;\n    // No guarantee that this is from the same layer!!!!\n    this.queryPointData();\n  }\n\n  publicationSelected(idx: number) {\n    this.layer.options.publication = idx;\n    // this.publication=this.layer.layer.publications[idx];\n    if (this.publication.pointdata) {\n      this.pointSelectionChanged();\n      this.updateVariables();\n    }\n\n    this.update(idx);\n  }\n\n  updateLayer() {\n    this.layer.options.tags = this.tags;\n    this.layer.update();\n    this.propertyChanged.emit(this.layer);\n  }\n\n  update(event: any) {\n    this.updateLayer();\n\n    setTimeout(() => {\n      this.findTags();\n    });\n  }\n\n  processTags(tags: { [key: string]: Array<string | LayerTagValue> }): LayerTagMap {\n    if (!tags) {\n      return null;\n    }\n\n    let result: LayerTagMap = {};\n\n    Object.keys(tags).forEach(k => {\n      let values: Array<string | LayerTagValue> = tags[k];\n      result[k] = values.map(v => {\n        let vAsTag = <LayerTagValue>v;\n        if (vAsTag.value && vAsTag.label) {\n          return vAsTag;\n        }\n        let vAsString = <string>v;\n        return {\n          value: vAsString,\n          label: vAsString\n        };\n      })\n    })\n    return result;\n  }\n\n  findTags() {\n    if (this.publication.pointdata) {\n      this.availableTags = this.processTags(this.publication.pointdata.tags);\n    } else {\n      this.availableTags = this.processTags(this.layer.flattenedSettings.options.tags);\n    }\n    this.setDefaultTags();\n  }\n\n  tagChanged(t: string) {\n    this.queryPointData();\n    this.update(null);\n  }\n\n  setDefaultTags() {\n    if (!this.availableTags) {\n      return;\n    }\n\n    Object.keys(this.availableTags).forEach(tag => {\n      if (this.tags[tag] === undefined) {\n        this.tags[tag] = this.availableTags[tag][0].value;\n      }\n    });\n\n    this.updateLayer();\n  }\n\n  zoomToExtent() {\n    if (!this.map) {\n      console.log('NO MAP!');\n      return;\n    }\n\n    this.map.lat = this.layer.layer.lat;\n    this.map.lng = this.layer.layer.lon;\n    this.map.zoom = this.layer.layer.zoom || 13;\n  }\n\n  pointSelection(): PointSelection {\n    return {\n      catalog: this.publication.pointdata,\n      variable: this.selectedVariable,\n      feature: this.selectedFeature,\n      tags: this.tags\n    };\n  }\n\n  queryPointData() {\n    let pointdata = this.publication && this.publication.pointdata;\n\n    if (!this.publication || !this.publication.pointdata) {\n      return;\n    }\n\n    this.pointSelectionChanged();\n    this.updateVariables();\n  }\n\n  updateVariables(){\n    let sel = this.pointSelection();\n    this.pointSelectionService.timeseriesVariables(\n      sel).subscribe(variables => {\n        this.pointVariables = variables.slice();\n        if(this.publication.pointdata.exclude){\n          this.pointVariables = this.pointVariables.filter(v=>{\n            return !this.publication.pointdata.exclude.some(pattern=>{\n              return !!v.value.match(pattern);\n            });\n          });\n        }\n        if(!this.pointVariables.length){\n          this.selectedVariable = null;\n        } else if (this.pointVariables.findIndex(t=>t.value===this.selectedVariable) < 0) {\n          if (this.pointVariables.findIndex(t=>t.value===this.publication.pointdata.defaultVariable) >= 0) {\n            this.selectedVariable = this.publication.pointdata.defaultVariable;\n          } else {\n            this.selectedVariable = this.pointVariables[0].value;\n          }\n        }\n        this.pointSelectionChanged();\n      });\n  }\n\n  pointSelectionChanged() {\n    this.pointSelectionService.pointSelection(this.pointSelection());\n  }\n}\n","import { Component, Input, ViewChild, AfterViewInit, ElementRef, OnChanges, SimpleChanges, Output, EventEmitter } from '@angular/core';\nimport { MappedLayer, MetadataService } from \"map-wald\";\nimport { LayeredMapComponent } from '../layered-map/layered-map.component';\n\n\ndeclare var Plotly: any;\n\n@Component({\n  selector: 'layer-control',\n  template: `<div class=\"layers-control\">\n  <div *ngIf=\"showLegends\" class=\"layers-control-header\"> <!-- header -->\n    <div class=\"float-right\">\n      <!-- TODO Attach handlers and tooltips to each icon -->\n      <i class=\"fa fa-lg fa-cog discrete-icon\" (click)=\"allLegends(false)\"></i>\n      <i class=\"fa fa-lg fa-th-list discrete-icon\" (click)=\"allLegends(true)\"></i>\n    </div>\n    <br/>\n  </div>\n\n  <div *ngIf=\"layers\">\n    <div *ngFor=\"let l of layers; let i = index\"\n         class=\"layer-control d-flex justify-content-between\">\n      <div class=\"p-2\" style=\"width:100%\">\n        <div *ngIf=\"showLegends&&l.options.legend\">\n          <div *ngIf=\"l.flattenedSettings?.palette || l.legendURL\">\n            <map-legend [title]=\"l.title\"\n              [imageURL]=\"l.legendURL\"\n              [helpText]=\"l.description()\"\n              [mapUnits]=\"l.flattenedSettings?.units\"\n              [cbPalette]=\"l.flattenedSettings?.palette?.name||l.flattenedSettings?.palette\"\n              [cbCount]=\"l.flattenedSettings?.numcolorbands||l.flattenedSettings?.palette?.count\"\n              [cbReverse]=\"l.flattenedSettings?.palette?.reverse\"\n              [cbRange]=\"l.flattenedSettings?.colorscalerange\">\n            </map-legend>\n          </div>\n        </div>\n\n        <div *ngIf=\"!showLegends||!l.options.legend\">\n          <layer-properties [layer]=\"l\"\n                            [map]=\"map\"\n                            (propertyChanged)=\"layerPropertyChanged($event)\">\n          </layer-properties>\n        </div>\n      </div>\n      <div class=\"p-2\">\n          <div>\n            <!-- TODO Attach handlers and tooltips to each icon -->\n            <i *ngIf=\"allowReorder\" class=\"fa fa-bars discrete-icon\"></i><br *ngIf=\"allowReorder\"/>\n            <i *ngIf=\"showLegends\" class=\"fa fa-cog discrete-icon\"\n               ngbTooltip=\"Show layer controls\" placement=\"right\" data-container=\"body\"\n               (click)=\"layerLegend(l,false)\"></i><br *ngIf=\"showLegends\"/>\n            <i *ngIf=\"showLegends\" class=\"fa fa-th-list discrete-icon\"\n               ngbTooltip=\"Show layer data\" placement=\"right\" data-container=\"body\"\n               (click)=\"layerLegend(l,true)\"></i><br *ngIf=\"showLegends\"/>\n            <i *ngIf=\"allowReorder\" class=\"fa fa-angle-double-up discrete-icon\"\n               ngbTooltip=\"Move to top\" placement=\"right\" data-container=\"body\"\n              (click)=\"moveToTop(i)\"></i><br *ngIf=\"allowReorder\"/>\n            <i *ngIf=\"allowReorder\" class=\"fa fa-angle-up discrete-icon\"\n               ngbTooltip=\"Move up\" placement=\"right\" data-container=\"body\"\n              (click)=\"moveUp(i)\"></i><br *ngIf=\"allowReorder\"/>\n            <i *ngIf=\"allowReorder\" class=\"fa fa-angle-down discrete-icon\"\n               ngbTooltip=\"Move down\" placement=\"right\" data-container=\"body\"\n              (click)=\"moveDown(i)\"></i><br *ngIf=\"allowReorder\"/>\n            <i *ngIf=\"allowReorder\" class=\"fa fa-angle-double-down discrete-icon\"\n               ngbTooltip=\"Move to bottom\" placement=\"right\" data-container=\"body\"\n              (click)=\"moveToBottom(i)\"></i><br *ngIf=\"allowReorder\"/>\n            <i *ngIf=\"allowRemove\" class=\"fa fa-times discrete-icon\"\n               ngbTooltip=\"Remove layer\" placement=\"right\" data-container=\"body\"\n              data-toggle=\"tooltip\" title=\"Remove layer\"\n              (click)=\"removeLayer(i)\"></i>\n          </div>\n        </div>\n      </div>\n  </div>\n</div>\n\n<!-- Should this control be outside the map? eg to the left? -->\n`,styles: [`.layers-control{\n  width:200px;\n}\n\n\n.layers-control-header, .layer-control{\n  border-bottom: 1.5px solid #aaa;\n}`]})\nexport class LayerControlComponent implements AfterViewInit, OnChanges {\n  @Input() layers: MappedLayer[];\n  @Input() map: LayeredMapComponent;\n  @Input() allowRemove = true;\n  @Input() showLegends = true;\n  @Input() allowReorder = true;\n  @Output() layersChange = new EventEmitter<MappedLayer[]>();\n  uniformViewMode: boolean | undefined;\n  foo: string = 'bar';\n\n  constructor(private metadata:MetadataService) {\n\n  }\n\n  ngAfterViewInit() {\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (!changes.layers || !this.layers) {\n      return;\n    }\n    this.applyViewMode();\n    this.fetchMetadata();\n  }\n\n  applyViewMode(){\n    if (this.uniformViewMode === undefined) {\n      return;\n    }\n\n    this.layers.forEach(l => l.options.legend = this.uniformViewMode);\n  }\n\n  allLegends(showLegend: boolean) {\n    this.uniformViewMode = showLegend;\n    this.layers.forEach(l => l.options.legend = showLegend);\n  }\n\n  layerLegend(layer: MappedLayer, showLegend: boolean) {\n    this.uniformViewMode = undefined;\n    layer.options.legend = showLegend;\n  }\n\n  moveToTop(idx: number) {\n    this.layers = [this.layers[idx]].concat(this.layers.slice(0, idx)).concat(this.layers.slice(idx + 1));\n    this._changed();\n  }\n\n  moveUp(idx: number) {\n    if (idx === 0) {\n      return;\n    }\n\n    var layers = this.layers;\n    this.layers = layers.slice(0, idx - 1).concat([layers[idx], layers[idx - 1]]).concat(layers.slice(idx + 1));\n    this._changed();\n  }\n\n  moveDown(idx: number) {\n    if (idx === (this.layers.length - 1)) {\n      return;\n    }\n\n    var layers = this.layers;\n    this.layers = layers.slice(0, idx).concat([layers[idx + 1], layers[idx]]).concat(layers.slice(idx + 2));\n    this._changed();\n  }\n\n  moveToBottom(idx: number) {\n    this.layers = this.layers.slice(0, idx).concat(this.layers.slice(idx + 1)).concat([this.layers[idx]]);\n    this._changed();\n  }\n\n  removeLayer(idx: number) {\n    var layers = this.layers.slice();\n    layers.splice(idx, 1);\n    this.layers = layers;\n    this._changed();\n  }\n\n  layerPropertyChanged(l: MappedLayer) {\n    this.layers = this.layers.slice();\n    this._changed();\n  }\n\n  private _changed() {\n    this.fetchMetadata();\n    this.layersChange.emit(this.layers);\n  }\n\n  fetchMetadata(){\n    this.layers.forEach(ml=>{\n      this.metadata.populateMetadata(ml);\n    })\n  }\n}\n","import { Component, Input, Output,\n         AfterViewInit, EventEmitter } from '@angular/core';\nimport { Catalog, Layer, LayerSelection, LayerAction } from \"map-wald\";\n\ndeclare var Plotly: any;\n\n@Component({\n  selector: 'theme-navbar',\n  template: `<ul class=\"navbar-nav\">\n  <li class=\"nav-item\" ngbDropdown *ngFor=\"let theme of catalog?.themes\">\n    <a class=\"nav-link\" ngbDropdownToggle href=\"#\"><i class=\"fa\" [ngClass]=\"theme.icon\"></i></a>\n    <div ngbDropdownMenu class=\"dropdown-menu\">\n      <a class=\"dropdown-item\" href=\"#\" (click)=\"layerClick($event,layer,'replace')\" *ngFor=\"let layer of theme.layers\">\n        <div>\n          <span>{{layer.name}}</span>\n          <span class=\"float-right layer-select-icons\">\n            <i class=\"fa fa-map layer-select-icon discrete-icon\"\n               (click)=\"layerClick($event,layer,'replace')\"\n               placement=\"right\"\n               ngbTooltip=\"Map this layer. (Replace any existing layers)\"></i>\n            <br/>\n            <i class=\"fa fa-plus layer-select-icon discrete-icon\"\n               (click)=\"layerClick($event,layer,'add')\"\n               placement=\"right\"\n               ngbTooltip=\"Add this layer to the map.\"></i>\n          </span>\n        </div>\n      </a>\n    </div>\n  </li>\n</ul>\n\n<!--\n\n[ng-reflect-ngb-tooltip].yellow + .tooltip {\n    background-color: yellow;\n}\n-->`,styles: [`\n.layer-select-icons{\n  font-size:0.75em;\n  margin-right:-20px;\n}\n\n/* Annoying... using /deep/ to access the child component\n * but /deep/ (and synonyms) are deprecated. Not clear what\n * we should be doing\n */\n/deep/ .tooltip-inner {\n  width: 400px;\n}\n\n.dropdown-item{\n  border-bottom: 1px solid #aaa;\n  height: 40px;\n}\n`]})\nexport class ThemeNavbarComponent implements AfterViewInit  {\n  @Input() catalog:Catalog;\n  @Input() includeSearch:boolean;\n\n  @Output() layerSelected:EventEmitter<LayerSelection> = new EventEmitter<LayerSelection>();\n\n  constructor(){\n\n  }\n\n  ngAfterViewInit(){\n\n  }\n\n  layerClick(event:any,layer:Layer,action:LayerAction){\n    this.stop(event);\n    var selection = {\n      layer:layer,\n      action:action\n    };\n\n    this.layerSelected.emit(selection);\n  }\n\n  stop(event:any){\n    event.preventDefault();\n    event.stopPropagation();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {MapsAPILoader} from '@agm/core';\nimport {Observable, from} from 'rxjs';\n\ndeclare var google:any;\n\n@Injectable()\nexport class GeocodingService {\n  constructor(private _api:MapsAPILoader){\n\n  }\n\n  geocode(address:string,bnds?:any):Observable<any>{\n    var promise = new Promise((resolve,reject)=>{\n      this._api.load().then(()=>{\n        var service = new google.maps.Geocoder();\n        service.geocode({\n          address:address,\n          componentRestrictions: {\n            country: 'AU'\n          },\n          region:'AU'\n        },(results:any,status:any)=>{\n          if(status!==google.maps.GeocoderStatus.OK){\n            reject();\n          } else {\n            resolve(results.filter(function(r:any){\n              return r.formatted_address!=='Australia';\n            }));\n          }\n        });\n      });\n    });\n\n    return from(promise);\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgPipesModule } from 'ngx-pipes';\nimport { AgmCoreModule } from '@agm/core';\nimport { CommonModule } from '@angular/common';\nimport { MapWaldCoreModule } from 'map-wald';\n\nimport { WMSLayerComponent } from './wms-layer/wms-layer.component';\nimport { MapLegendComponent } from './map-legend/map-legend.component';\nimport { MapControlComponent } from './map-control/map-control.component';\nimport { DateShifterComponent } from './date-shifter/date-shifter.component';\nimport { OneTimeSplashComponent } from './one-time-splash/one-time-splash.component';\nimport { DateElementComponent } from './date-element/date-element.component';\nimport { ShareViewComponent } from './share-view/share-view.component';\nimport { LocationSearchComponent } from './location-search/location-search.component';\nimport { ZoomLayerComponent } from './action-buttons/zoom-layer/zoom-layer.component';\nimport { ZoomFullComponent } from './action-buttons/zoom-full/zoom-full.component';\nimport { ZoomOutComponent } from './action-buttons/zoom-out/zoom-out.component';\nimport { ZoomInComponent } from './action-buttons/zoom-in/zoom-in.component';\nimport {CycleBaseMapComponent} from './action-buttons/cycle-base-map/cycle-base-map.component';\nimport {CycleOpacityComponent} from './action-buttons/cycle-opacity/cycle-opacity.component';\nimport { ButtonBarComponent } from './button-bar/button-bar.component';\nimport { TimeseriesChartComponent } from './timeseries-chart/timeseries-chart.component';\nimport { FeatureTableComponent } from './feature-table/feature-table.component';\nimport { CollapsibleMapControlComponent } from './collapsible-map-control/collapsible-map-control.component';\nimport { BaseMapSelectionComponent } from './base-map-selection/base-map-selection.component';\nimport { SimpleTreeNodeComponent } from './simple-tree-node/simple-tree-node.component';\nimport { SimpleTreeComponent } from './simple-tree/simple-tree.component';\nimport { CatalogComponent } from './catalog/catalog.component';\nimport { DateSelectionComponent } from './date-selection/date-selection.component';\nimport { LayerPropertiesComponent } from './layer-properties/layer-properties.component';\nimport { LayerControlComponent } from './layer-control/layer-control.component';\nimport { LayeredMapComponent } from './layered-map/layered-map.component';\nimport { ThemeNavbarComponent } from './theme-navbar/theme-navbar.component';\n\nimport { GeocodingService } from './geocoding.service';\n\nexport * from './wms-layer/wms-layer.component';\nexport * from './map-legend/map-legend.component';\nexport * from './date-shifter/date-shifter.component';\nexport * from './one-time-splash/one-time-splash.component';\nexport * from './date-element/date-element.component';\nexport * from './share-view/share-view.component';\nexport * from './location-search/location-search.component';\nexport * from './action-buttons/zoom-layer/zoom-layer.component';\nexport * from './action-buttons/zoom-full/zoom-full.component';\nexport * from './action-buttons/zoom-out/zoom-out.component';\nexport * from './action-buttons/zoom-in/zoom-in.component';\nexport * from './action-buttons/cycle-base-map/cycle-base-map.component';\nexport * from './action-buttons/cycle-opacity/cycle-opacity.component';\n\nexport * from './button-bar/button-bar.component';\nexport * from './timeseries-chart/timeseries-chart.component';\nexport * from './feature-table/feature-table.component';\nexport * from './collapsible-map-control/collapsible-map-control.component';\nexport * from './base-map-selection/base-map-selection.component';\nexport * from './simple-tree-node/simple-tree-node.component';\nexport * from './simple-tree/simple-tree.component';\nexport * from './catalog/catalog.component';\nexport * from './date-selection/date-selection.component';\nexport * from './layer-properties/layer-properties.component';\nexport * from './layer-control/layer-control.component';\nexport * from './layered-map/layered-map.component';\nexport * from './theme-navbar/theme-navbar.component';\nexport * from './map-control/map-control.component';\n\nexport * from './geocoding.service';\n\n\nconst components = [\n  //$componentList\n  DateShifterComponent,\n  OneTimeSplashComponent,\n  DateElementComponent,\n  ShareViewComponent,\n  LocationSearchComponent,\n  ZoomLayerComponent,\n  ZoomFullComponent,\n  ZoomOutComponent,\n  ZoomInComponent,\n  CycleBaseMapComponent,\n  CycleOpacityComponent,\n  ButtonBarComponent,\n  TimeseriesChartComponent,\n  FeatureTableComponent,\n  CollapsibleMapControlComponent,\n  BaseMapSelectionComponent,\n  SimpleTreeNodeComponent,\n  SimpleTreeComponent,\n  CatalogComponent,\n  DateSelectionComponent,\n  LayerPropertiesComponent,\n  LayerControlComponent,\n  LayeredMapComponent,\n  ThemeNavbarComponent,\n  WMSLayerComponent,\n  MapLegendComponent,\n  MapControlComponent\n];\n\nconst services = [\n  //$serviceList\n  GeocodingService\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    AgmCoreModule,\n    HttpClientModule,\n    NgPipesModule,\n    NgbModule,\n    MapWaldCoreModule\n  ],\n  declarations: components,\n  exports: components,\n  providers: services\n})\nexport class MapWaldBootstrapModule {\n  static forRoot(moduleInitialisation:any): ModuleWithProviders {\n    return {\n      ngModule: MapWaldBootstrapModule,\n      providers: services\n    };\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"]}