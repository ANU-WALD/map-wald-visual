{"version":3,"sources":["ng://map-wald-visual/wms-layer/wms-layer.component.ts","ng://map-wald-visual/map-legend/map-legend.component.ts","ng://map-wald-visual/map-control/map-control.component.ts","ng://map-wald-visual/date-shifter/date-shifter.component.ts","ng://map-wald-visual/one-time-splash/one-time-splash.component.ts","ng://map-wald-visual/date-element/date-element.component.ts","ng://map-wald-visual/share-view/share-view.component.ts","ng://map-wald-visual/location-search/location-search.component.ts","ng://map-wald-visual/layered-map/layered-map.component.ts","ng://map-wald-visual/action-buttons/zoom-layer/zoom-layer.component.ts","ng://map-wald-visual/action-buttons/zoom-full/zoom-full.component.ts","ng://map-wald-visual/action-buttons/zoom-out/zoom-out.component.ts","ng://map-wald-visual/action-buttons/zoom-in/zoom-in.component.ts","ng://map-wald-visual/action-buttons/cycle-base-map/cycle-base-map.component.ts","ng://map-wald-visual/action-buttons/cycle-opacity/cycle-opacity.component.ts","ng://map-wald-visual/button-bar/button-bar.component.ts","ng://map-wald-visual/timeseries-chart/timeseries-chart.component.ts","ng://map-wald-visual/feature-table/feature-table.component.ts","ng://map-wald-visual/collapsible-map-control/collapsible-map-control.component.ts","ng://map-wald-visual/base-map-selection/base-map-selection.component.ts","ng://map-wald-visual/simple-tree-node/simple-tree-node.component.ts","ng://map-wald-visual/simple-tree/simple-tree.component.ts","ng://map-wald-visual/catalog/catalog.component.ts","ng://map-wald-visual/date-selection/date-selection.component.ts","ng://map-wald-visual/layer-properties/layer-properties.component.ts","ng://map-wald-visual/layer-control/layer-control.component.ts","ng://map-wald-visual/theme-navbar/theme-navbar.component.ts","ng://map-wald-visual/geocoding.service.ts","ng://map-wald-visual/index.ts","ng://map-wald-visual/map-wald-visual.ts"],"names":["WMSLayerComponent","_wmsService","_wrapper","this","opacity","position","zoom","building","prototype","buildMap","_this","getNativeMap","then","theMap","map","overlay","buildImageMap","z","url","params","overlayMapTypes","length","removeAt","insertAt","push","catch","e","console","log","ngOnInit","ngOnChanges","changes","ngOnDestroy","i0","ɵɵdirectiveInject","i1","WMSService","i2","GoogleMapsAPIWrapper","selectors","inputs","features","ɵɵNgOnChangesFeature","decls","vars","template","rf","ctx","encapsulation","exports","ɵɵelement","ɵɵproperty","ctx_r1","helpText","ɵɵsanitizeHtml","ctx_r2","mapUnits","ɵɵelementStart","ɵɵelementEnd","_r0","ctx_r3","tooltipPlacement","ɵɵadvance","ɵɵpureFunction1","_c0","colour_r9","ctx_r8","generatedLabels","i_r10","ɵɵtemplate","MapLegendComponent_div_7_div_2_Template","ctx_r4","colours","ctx_r5","imageURL","ɵɵsanitizeUrl","ɵɵtext","ctx_r6","attributionLink","ɵɵtextInterpolate","attribution","ɵɵtextInterpolate1","ctx_r7","MapLegendComponent","_palettes","labels","title","formatValue","val","decimalPlaces","parts","toString","split","replace","substr","join","Object","defineProperty","_cbPalette","cbp","generatePalette","_cbCount","cbc","_cbReverse","cbr","_cbRange","generateLabels","count","upper","delta","result","lower","Math","max","log10","toFixed","min","i","reverse","getPalette","subscribe","palette","slice","PaletteService","cbPalette","cbCount","cbReverse","cbRange","consts","MapLegendComponent_ng_template_1_Template","ɵɵtemplateRefExtractor","MapLegendComponent_span_5_Template","MapLegendComponent_span_6_Template","MapLegendComponent_div_7_Template","MapLegendComponent_div_8_Template","MapLegendComponent_p_9_Template","MapLegendComponent_p_10_Template","MapControlComponent","_el","ngAfterViewInit","m","content","nativeElement","querySelector","nodeName","controlDiv","document","createElement","appendChild","controls","window","google","maps","ControlPosition","ElementRef","viewQuery","ɵɵprojection","DateShifterComponent","interval","limits","date","Date","dateChange","core_1","value","label","timer","dateText","startTimer","clearInterval","setInterval","tick","reset","sliderMoved","sign","getTime","abs","setDate","getDate","setMonth","getMonth","setFullYear","getFullYear","setDateText","emit","toLocaleDateString","setLabel","outputs","ɵɵlistener","$event","ɵɵrestoreView","_r6","ɵɵnextContext","doNotShow","doNotShowClicked","hideMessage","d_r3","dismiss","OneTimeSplashComponent_ng_template_0_label_9_Template","c_r2","close","application","OneTimeSplashComponent","modalService","storageKey","setTimeout","key","store","get","show","current","open","splashTemplate","size","windowClass","klass","set","NgbModal","OneTimeSplashComponent_ng_template_0_Template","DateElementComponent","step","changed","move","n","src","property","ShareViewComponent","LocationSearchComponent","marker_r3","html","LayeredMapComponent_agm_marker_2_span_5_Template","loc","lng","lat","iconUrl","mp_r7","wmsParameters","options","_r14","clicked","ɵɵstyleMap","_styleFunc","staticData","_r21","f_r17","$implicit","circleClicked","geometry","coordinates","ctx_r16","flattenedSettings","styles","fillColor","fillOpacity","strokeColor","strokeOpacity","selectedFeature","strokeWeight","ɵɵelementContainerStart","LayeredMapComponent_ng_container_3_ng_container_3_agm_circle_1_Template","ɵɵelementContainerEnd","LayeredMapComponent_ng_container_3_wms_layer_1_Template","LayeredMapComponent_ng_container_3_agm_data_layer_2_Template","LayeredMapComponent_ng_container_3_ng_container_3_Template","layerType","LayeredMapComponent","_zone","metadata","layers","markers","mapTypeId","layersChange","featureSelected","pointSelected","mapTypePosition","google_maps_types_1","BOTTOM_LEFT","streetViewControl","showMapType","mapTypeOptions","setLayerPositions","infoWindows","forEach","w","runOutsideAngular","bounds","_bounds","layersChanged","layerAdded","selection","find","l","layer","mapped","map_wald_1","legend","vectors","host","filepath","data","activateLayer","update","action","filter","ml","concat","ix","extractFeature","f","geo","getGeometry","type","props","forEachProperty","prop","properties","event","feature","mapClick","coords","zoomToBounds","zoomChanged","NgZone","StaticDataService","MetadataService","core_2","LayeredMapComponent_agm_marker_2_Template","LayeredMapComponent_ng_container_3_Template","ɵɵpipeBind1","ZoomLayerComponent","zoomToLayer","spatialExtent","b","assign","fullBounds","ZoomFullComponent","ZoomOutComponent","minZoom","zoomOut","ZoomInComponent","maxZoom","zoomIn","CycleBaseMapComponent","baseLayers","map_type_id","tooltip","baseLayer","toggleBaseLayer","next","findIndex","CycleOpacityComponent","layerOpacity","updateLayers","cycleTransparency","ButtonBarComponent","ngContentSelectors","TimeseriesChartComponent","_element","timeSeries","marginLeft","marginRight","marginTop","marginBottom","titlefont","undefined","draw","node","Plotly","purge","commonUnits","seriesUnits","ts","units","every","u","layout","margin","t","r","yaxis","fixedrange","width","height","plot","nonNullCount","values","v","isNaN","mode","style","suffix","x","dates","y","name","prop_r2","FeatureTableComponent_table_0_tr_16_td_5_a_1_Template","hyperlink","FeatureTableComponent_table_0_tr_16_td_4_Template","FeatureTableComponent_table_0_tr_16_td_5_Template","FeatureTableComponent_table_0_tr_16_Template","ctx_r0","_keys","FeatureTableComponent","keys","FeatureTableComponent_table_0_Template","CollapsibleMapControlComponent","isCollapsed","heading","direction","CollapsibleMapControlComponent_span_5_Template","CollapsibleMapControlComponent_span_6_Template","BaseMapSelectionComponent","_r4","a_r2","tree","ɵɵpropertyInterpolate","icon","SimpleTreeNodeComponent_span_6_i_2_Template","actions","SimpleTreeNodeComponent","nodeSelected","evalState","treeClick","stopPropagation","preventDefault","expanded","children","leaf","collapsed","expandedIcon","collapsedIcon","leafIcon","SimpleTreeNodeComponent_span_6_Template","_r8","childSelected","t_r6","SimpleTreeComponent_div_0_div_1_ul_3_simple_tree_1_Template","_r10","SimpleTreeComponent_div_0_div_1_ul_3_Template","_r15","t_r13","ctx_r12","SimpleTreeComponent_div_0_div_2_ul_4_simple_tree_1_Template","ctx_r11","_r17","SimpleTreeComponent_div_0_div_2_ul_4_Template","_r22","t_r20","ctx_r19","SimpleTreeComponent_div_0_div_3_ul_1_simple_tree_1_Template","ctx_r18","SimpleTreeComponent_div_0_div_3_ul_1_Template","SimpleTreeComponent_div_0_div_1_Template","SimpleTreeComponent_div_0_div_2_Template","SimpleTreeComponent_div_0_div_3_Template","inner","showTop","SimpleTreeComponent","SimpleTreeComponent_div_0_Template","visible","CatalogComponent","filterService","showPlaceholders","defaultAction","layerActions","layerSelected","filterText","catalog","buildTree","highlightLayers","self","cat","deferredLayers","themes","path","skip","reduce","deferredThemes","treeActions","la","layerClick","layerToTree","tmp","description","rxjs_1","getMetadata","pipe","operators_1","meta","descriptionField","themeToTree","placeholder","findParent","components","parent","index","components_1","__values","components_1_1","done","component","found","_c","e_2","_d","newNode","addChild","child","splice","_a","__read","activeLayers","indexOf","activeChild","TreeFilterService","CatalogComponent_i_3_Template","CatalogComponent_i_4_Template","filterTree","dateStruct","dateStructChanged","ɵɵreference","toggle","maxDateStruct","minDateStruct","_r11","stepDays","_r13","ctx_r9","DateSelectionComponent_div_2_date_element_1_Template","DateSelectionComponent_div_2_date_element_2_Template","DateSelectionComponent_div_2_date_element_3_Template","need","day","month","year","DateSelectionComponent","timeUtils","referenceDate","atMax","atMin","minDate","convertDate","maxDate","timestep","assessDateComponents","checkLimits","UTC","checkReference","onDateChanged","datesEqual","refComponents","interpolate","s","currentRef","timeSpan","days","round","TimeUtilsService","DateSelectionComponent_div_1_Template","DateSelectionComponent_div_2_Template","interpolatedDownloadURL","publicationLabel","i_r12","p_r11","LayerPropertiesComponent_div_7_span_1_Template","LayerPropertiesComponent_div_7_span_2_Template","publication","publicationSelected","LayerPropertiesComponent_div_7_option_4_Template","publications","timestepMultiplier","timestepReference","start","end","_r20","zoomToExtent","val_r24","_r26","tag_r22","tags","tagChanged","LayerPropertiesComponent_div_11_div_1_option_3_Template","ctx_r21","availableTags","LayerPropertiesComponent_div_11_div_1_Template","getKeys","v_r29","_r31","selectedVariable","queryPointData","LayerPropertiesComponent_div_12_option_3_Template","pointVariables","LayerPropertiesComponent","pointSelectionService","propertyChanged","selectedFeatureSubscription","evt","findTags","unsubscribe","pointdata","idx","pointSelectionChanged","updateVariables","updateLayer","processTags","k","vAsTag","setDefaultTags","tag","lon","pointSelection","variable","sel","timeseriesVariables","variables","exclude","some","pattern","match","defaultVariable","PointSelectionService","LayerPropertiesComponent_span_4_Template","LayerPropertiesComponent_span_6_Template","LayerPropertiesComponent_div_7_Template","LayerPropertiesComponent_div_8_Template","LayerPropertiesComponent_div_9_Template","LayerPropertiesComponent_div_10_Template","LayerPropertiesComponent_div_11_Template","LayerPropertiesComponent_div_12_Template","smallExtent","_r3","allLegends","l_r6","legendURL","numcolorbands","colorscalerange","LayerControlComponent_div_2_div_1_div_2_div_1_Template","_r29","layerPropertyChanged","_r33","layerLegend","_r36","_r39","i_r7","moveToTop","_r42","moveUp","_r45","moveDown","_r48","moveToBottom","_r51","removeLayer","LayerControlComponent_div_2_div_1_div_2_Template","LayerControlComponent_div_2_div_1_div_3_Template","LayerControlComponent_div_2_div_1_i_6_Template","LayerControlComponent_div_2_div_1_br_7_Template","LayerControlComponent_div_2_div_1_i_8_Template","LayerControlComponent_div_2_div_1_br_9_Template","LayerControlComponent_div_2_div_1_i_10_Template","LayerControlComponent_div_2_div_1_br_11_Template","LayerControlComponent_div_2_div_1_i_12_Template","LayerControlComponent_div_2_div_1_br_13_Template","LayerControlComponent_div_2_div_1_i_14_Template","LayerControlComponent_div_2_div_1_br_15_Template","LayerControlComponent_div_2_div_1_i_16_Template","LayerControlComponent_div_2_div_1_br_17_Template","LayerControlComponent_div_2_div_1_i_18_Template","LayerControlComponent_div_2_div_1_br_19_Template","LayerControlComponent_div_2_div_1_i_20_Template","showLegends","allowReorder","allowRemove","LayerControlComponent_div_2_div_1_Template","LayerControlComponent","foo","applyViewMode","fetchMetadata","uniformViewMode","showLegend","_changed","populateMetadata","LayerControlComponent_div_1_Template","LayerControlComponent_div_2_Template","_r5","layer_r3","ThemeNavbarComponent_li_1_a_4_Template","theme_r1","ThemeNavbarComponent","stop","includeSearch","ThemeNavbarComponent_li_1_Template","GeocodingService","_api","geocode","address","bnds","promise","Promise","resolve","reject","load","SUCCESS_STATUSES","GeocoderStatus","OK","ZERO_RESULTS","Geocoder","componentRestrictions","country","region","results","status","formatted_address","ɵɵinject","MapsAPILoader","factory","ɵfac","__exportStar","wmsLayer_component","mapLegend_component","dateShifter_component","oneTimeSplash_component","dateElement_component","shareView_component","locationSearch_component","zoomLayer_component","zoomFull_component","zoomOut_component","zoomIn_component","cycleBaseMap_component","cycleOpacity_component","buttonBar_component","timeseriesChart_component","featureTable_component","collapsibleMapControl_component","baseMapSelection_component","simpleTreeNode_component","simpleTree_component","catalog_component","dateSelection_component","layerProperties_component","layerControl_component","layeredMap_component","themeNavbar_component","mapControl_component","geocoding_service","date_shifter_component_1","one_time_splash_component_1","date_element_component_1","share_view_component_1","location_search_component_1","zoom_layer_component_1","zoom_full_component_1","zoom_out_component_1","zoom_in_component_1","cycle_base_map_component_1","cycle_opacity_component_1","button_bar_component_1","timeseries_chart_component_1","feature_table_component_1","collapsible_map_control_component_1","base_map_selection_component_1","simple_tree_node_component_1","simple_tree_component_1","catalog_component_1","date_selection_component_1","layer_properties_component_1","layer_control_component_1","layered_map_component_1","theme_navbar_component_1","wms_layer_component_1","map_legend_component_1","map_control_component_1","services","geocoding_service_1","MapWaldBootstrapModule","forRoot","moduleInitialisation","ngModule","providers","imports","common_1","forms_1","http_1","ngx_pipes_1","ng_bootstrap_1","declarations","esm5"],"mappings":"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","sourcesContent":["import { Component, OnInit, AfterViewInit, Input,\n         OnChanges, SimpleChanges, OnDestroy } from '@angular/core';\nimport {GoogleMapsAPIWrapper} from '@agm/core';\nimport {WMSService} from 'map-wald';\n\n@Component({\n  selector: 'wms-layer',\n  template:'',\n})\nexport class WMSLayerComponent implements OnInit, OnDestroy{\n  @Input() url: string;\n  @Input() params:any;\n  @Input() opacity:number=1.0;\n  @Input() position:number=0;\n\n  constructor(private _wmsService:WMSService,\n              public _wrapper:GoogleMapsAPIWrapper) {}\n  map: any;\n  overlay:any;\n  zoom: number = 4;\n\n  private building:boolean=false;\n  buildMap(){\n    if(this.building)\n      return;\n    this.building=true;\n\n    this._wrapper.getNativeMap().then((theMap)=>{\n      this.building=false;\n      this.map = theMap;\n      this.overlay = this._wmsService.buildImageMap(\n          ()=>this.map,\n          (z)=>this.url+'?',\n          (z)=>this.params,\n          ()=>this.opacity\n        );\n\n      if(this.map.overlayMapTypes.length>this.position){\n        this.map.overlayMapTypes.removeAt(this.position);\n        this.map.overlayMapTypes.insertAt(this.position,this.overlay);\n      } else {\n        while(this.map.overlayMapTypes.length<=this.position){\n          // Temporarily add replicate layers.\n          // TheseÂ should be replaced by other wms-layer components\n          this.map.overlayMapTypes.push(this.overlay);\n        }\n      }\n    }).catch((e)=>console.log(e));\n  }\n\n  ngOnInit() {\n    if(this.url){\n      this.buildMap();\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if(this.url){\n      this.buildMap();\n    }\n    // let currentOpacity: number = changes.opacity.currentValue;\n    // let previousOpacity: number = changes.opacity.previousValue;\n\n    // if (currentOpacity !== previousOpacity) {\n    //   console.log('building a map off my own bat');\n    //   this.buildMap();\n    // }\n  }\n\n  ngOnDestroy(): void {\n    this._wrapper.getNativeMap().then((theMap)=>{\n      if(this.map.overlayMapTypes.length>this.position){\n        this.map.overlayMapTypes.removeAt(this.position);\n      }\n    });\n  }\n}\n","import { Component, OnInit, AfterViewInit, Input } from '@angular/core';\nimport { PaletteService } from 'map-wald';\n\n@Component({\n  selector: 'map-legend',\n  template: `<div class=\"map-legend panel panel-group\">\n<ng-template #tooltipContent>\n  <span [innerHtml]=helpText></span>\n</ng-template>\n<strong>{{title}} <span *ngIf=\"mapUnits\" [innerHTML]=\"'('+mapUnits+')'\"></span>\n        <span *ngIf=\"helpText\"\n              [ngbTooltip]=\"tooltipContent\"\n              [placement]=\"tooltipPlacement\"\n              container=\"body\">\n          <i class=\"fa fa-info-circle\"></i>\n        </span>\n</strong>\n\n  <div *ngIf=\"!imageURL\">\n    <div style=\"display:table;line-height:15px\">\n      <div style=\"display:table-row;padding:0;\"\n          *ngFor=\"let colour of colours; let i=index\">\n        <div class=\"legend-colour\">\n          <i class=\"legend-entry\" [ngStyle]=\"{background:colour}\"></i>\n        </div>\n        <div class=\"legend-label\">\n          <span [innerHTML]=\"generatedLabels[i]\"></span>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div *ngIf=\"imageURL\">\n    <img [src]=\"imageURL\">\n  </div>\n  <p *ngIf=\"attributionLink\">Source: <a [href]=\"attributionLink\">{{attribution || 'details'}}</a></p>\n  <p *ngIf=\"attribution&&!attributionLink\">Source: {{attribution}}</p>\n</div>\n`,styles: [`\n.map-legend{\n  display:block;\n  background: white;\n}\n\n.legend-colour{\n  display:table-cell;\n  padding:0px;\n}\n\n.legend-label{\n  display:table-cell;\n  padding:0px 4px 2px 2px;\n  font-size:10px;\n  vertical-align:middle;\n}\n\n.legend-entry {\n  float: left;\n  width: 15px !important;\n  height: 15px !important;\n}\n`]})\nexport class MapLegendComponent implements OnInit {\n  @Input() imageURL: string\n  @Input() colours: Array<string> = ['red', 'white', 'blue'];\n  @Input() labels: Array<string> = [];//['-','-','-'];\n  @Input() title: string = 'the title';\n  @Input() mapUnits :string = '';\n  @Input() helpText:string='No comment';\n  @Input() tooltipPlacement:string='right';\n  @Input() attribution: string;\n  @Input() attributionLink: string;\n\n  generatedLabels: string[] = [];\n  _cbPalette:string\n  _cbCount:number;\n  _cbReverse:boolean;\n  _cbRange:Array<number>;\n\n  @Input() set cbPalette(cbp:string){\n    this._cbPalette = cbp;\n    this.generatePalette();\n  }\n\n  get cbPalette():string{return this._cbPalette;}\n\n  @Input() set cbCount(cbc:number){\n    this._cbCount=cbc;\n    this.generatePalette();\n  }\n\n  get cbCount():number{return this._cbCount;}\n\n  @Input() set cbReverse(cbr:boolean){\n    this._cbReverse=cbr;\n    this.generatePalette();\n  }\n\n  get cbReverse():boolean{return this._cbReverse;}\n\n  @Input() set cbRange(cbr:Array<number>){\n    this._cbRange = cbr;\n    this.generatePalette();\n  }\n\n  get cbRange():Array<number>{return this._cbRange;}\n\n  generateLabels(count:number):Array<string>|null{\n    if(!this._cbRange||!count){\n      return null;\n    }\n\n    var delta = (this._cbRange[1]-this._cbRange[0])/(count);\n    var result = [];\n    var lower=this._cbRange[0];\n    let  decimalPlaces = Math.max(0,2-(+Math.log10(this._cbRange[1]-this._cbRange[0]).toFixed()));\n    decimalPlaces = Math.min(decimalPlaces,10);\n    var upper;\n    for(let i=1;i<(count);i++){\n      upper = this._cbRange[0]+i*delta;\n      result.push(`${this.formatValue(lower,decimalPlaces)}-${this.formatValue(upper,decimalPlaces)}`);\n      lower = upper;\n    }\n    result.push('&ge;'+this.formatValue(upper,decimalPlaces));\n    result.reverse();\n    return result;\n  }\n\n  generatePalette(){\n    if(!this._cbPalette||!this._cbCount){\n      return;\n    }\n\n    this._palettes.getPalette(this._cbPalette,this._cbReverse,this._cbCount)\n      .subscribe(palette=>{\n        this.colours = palette.slice().reverse();\n        this.generatedLabels = this.labels || this.generateLabels(this.colours.length) || palette;\n    });\n  }\n\n  formatValue = function(val:number,decimalPlaces:number):string{\n    if(!val){\n      if(val===0){\n        return '0';\n      }\n      return '-';\n    }\n    // Add thousand's separator. Source: http://stackoverflow.com/a/2901298\n    var parts = val.toString().split(\".\");\n    parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n\n    if(decimalPlaces===0){\n      return parts[0];\n    }\n\n    if((decimalPlaces!==null) &&(decimalPlaces!==undefined) && (parts.length===2)){\n      parts[1] = parts[1].substr(0,decimalPlaces);\n      parts[1] = parts[1].replace(/0+$/, '');\n    }\n    return parts.join('.');\n  };\n\n  constructor(private _palettes:PaletteService) { }\n\n  ngOnInit() { }\n\n}\n","import { Component, ElementRef, OnInit, ViewChild, AfterViewInit, Input } from '@angular/core';\nimport {GoogleMapsAPIWrapper} from '@agm/core';\n\n@Component({\n  selector: 'map-control',\n  template: `<div #mapControl class=\"map-control-content\">\n  <ng-content></ng-content>\n</div>\n`,styles: [`.map-control-content{\n  background: transparent;\n}\n`],\n})\nexport class MapControlComponent implements OnInit,AfterViewInit {\n  @ViewChild('mapControl',{static:false}) mapControl: Component;\n  @Input() position:string = 'TOP_RIGHT';\n\n  constructor(private _el:ElementRef, public _wrapper:GoogleMapsAPIWrapper) { }\n\n  ngOnInit() {\n  }\n\n  ngAfterViewInit(){\n    this._wrapper.getNativeMap().then((m)=>{\n      let content: HTMLElement = this._el.nativeElement.querySelector('.map-control-content');\n\n      // If content of the map control is not already wrapped in a div, do it\n      // now.\n      if (content.nodeName !== \"DIV\") {\n        let controlDiv: HTMLElement = document.createElement('div');\n        controlDiv.appendChild(content);\n        content = controlDiv;\n      }\n\n      (<any>m).controls[(<any>window).google.maps.ControlPosition[this.position]].push(content);\n    });\n  }\n\n}\n","import { Component, Input, ViewChild, AfterViewInit, ElementRef, Output, OnChanges, SimpleChanges, EventEmitter } from '@angular/core';\n\n\ndeclare var Plotly: any;\n\n@Component({\n  selector: 'date-shifter',\n  template: `<div>\n  <h3>{{dateText}}</h3>\n  <input type=\"range\"\n         class=\"form-control\"\n         min=\"-4\"\n         [max]=\"4\"\n         step=\"1\"\n         [(ngModel)]=\"value\"\n         (ngModelChange)=\"sliderMoved()\"\n         (mouseup)=\"reset()\">\n  <h4>{{label}}</h4>\n</div>\n\n  `,\n  styles: [``]\n})\nexport class DateShifterComponent implements AfterViewInit,OnChanges  {\n  @Input() interval = 2000;\n  @Input() limits:Date[] = null;\n  @Input() date = new Date();\n  @Output() dateChange = new EventEmitter<Date>();\n\n  value = 0;\n  label = '-';\n  timer:number = 0;\n  dateText = '-';\n\n  constructor(){\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if(changes.interval){\n      this.startTimer();\n    }\n  }\n\n  startTimer(): any {\n    if(this.timer){\n      clearInterval(this.timer);\n    }\n    this.timer = window.setInterval(()=>this.tick(),this.interval);\n  }\n\n  ngAfterViewInit(){\n    this.startTimer();\n  }\n\n  reset(){\n    this.value = 0;\n    this.sliderMoved();\n  }\n\n  tick(): any {\n    if(!this.value){\n      return;\n    }\n\n    let sign = this.value < 0 ? -1 : 1;\n    this.date = new Date(this.date.getTime());\n    switch(Math.abs(this.value)){\n      case 1:\n        this.date.setDate(this.date.getDate()+sign);\n        break;\n      case 2:\n        this.date.setDate(this.date.getDate()+7*sign);\n        break;\n      case 3:\n        this.date.setMonth(this.date.getMonth()+sign);\n        break;\n      case 4:\n        this.date.setFullYear(this.date.getFullYear()+sign);\n        break;\n    }\n\n    if(this.limits&&this.limits.length){\n      if(this.date.getTime()<this.limits[0].getTime()){\n        this.date = this.limits[0];\n      }\n      if(this.date.getTime()>this.limits[1].getTime()){\n        this.date = this.limits[1];\n      }\n    }\n    this.setDateText();\n    this.dateChange.emit(this.date);\n  }\n  setDateText(): any {\n    this.dateText = this.date.toLocaleDateString();\n  }\n\n  sliderMoved(){\n    this.setLabel();\n  }\n\n  setLabel() {\n    if(this.value<0){\n      this.label = 'back 1';\n    } else if(this.value>0){\n      this.label = 'advance 1';\n    } else {\n      this.label = '-';\n    }\n\n    switch(Math.abs(this.value)){\n      case 1:\n        this.label += 'day';\n        break;\n      case 2:\n        this.label += 'week';\n        break;\n      case 3:\n        this.label += 'month';\n        break;\n      case 4:\n        this.label += 'year';\n        break;\n    }\n  }\n}\n","import { Component, Input, ViewChild, AfterViewInit, ElementRef } from '@angular/core';\nimport { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\nimport * as store from 'store';\n\n\ndeclare var Plotly: any;\n\n@Component({\n  selector: 'one-time-splash',\n  template: `<ng-template #splashTemplate let-c=\"close\" let-d=\"dismiss\">\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title\">\n      {{label}}</h4>\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"d('Cross click')\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n  <div class=\"modal-body\">\n    <ng-content></ng-content>\n  </div>\n  <div class=\"modal-footer\">\n    <label *ngIf=\"application\">\n      <input type=\"checkbox\" [(ngModel)]=\"doNotShow\" (ngModelChange)=\"doNotShowClicked()\">\n      &nbsp; {{hideMessage}}\n    </label>\n    <button type=\"button\" class=\"btn btn-secondary\" (click)=\"c('Close click')\">Close</button>\n  </div>\n  </ng-template>\n`,\n  styles: [``]\n})\nexport class OneTimeSplashComponent implements AfterViewInit  {\n  @ViewChild('splashTemplate',{static:false}) splashTemplate:any;\n  @Input() application:string;\n  @Input() label = 'About';\n  @Input() hideMessage = 'Understood, I donât need to see this again';\n  @Input() klass: string;\n  doNotShow: boolean;\n  current:NgbModalRef;\n\n  constructor(private modalService: NgbModal){\n\n  }\n\n  storageKey(){\n    if(!this.application){\n      return null;\n    }\n\n    return this.application  + '-splash-skip';\n  }\n\n  ngAfterViewInit(){\n    setTimeout(()=>{\n      const key = this.storageKey();\n      if(key){\n        this.doNotShow = store.get(key,false);\n      }\n\n      if(!this.doNotShow){\n        this.show();\n      }\n    });\n  }\n\n  show(){\n    this.current = this.modalService.open(this.splashTemplate,{\n      size:'lg',\n      windowClass:this.klass\n    });\n  }\n\n  close(){\n    if(!this.current){\n      return;\n    }\n\n    this.current.close();\n    this.current=null;\n  }\n\n  doNotShowClicked(){\n    const key = this.storageKey();\n    if(!key){\n      return;\n    }\n\n    store.set(key,this.doNotShow);\n  }\n}\n","import { Component, Input, ViewChild, AfterViewInit, ElementRef, Output, EventEmitter } from '@angular/core';\n\n\ndeclare var Plotly: any;\n\n@Component({\n  selector: 'date-element',\n  template: `<div class=\"row no-gutters\">\n  <div class=\"col-4\">{{label}}</div>\n  <div class=\"col-2\">\n    <button class=\"btn btn-secondary btn-sm\" (click)=\"move(-step)\">\n      <i class=\"fa fa-angle-left\"></i>\n    </button>\n  </div>\n  <div class=\"col-4\"><button class=\"btn btn-link btn-sm\">{{src[property]}}</button></div>\n  <div class=\"col-2\">\n    <button class=\"btn btn-secondary btn-sm\" (click)=\"move(step)\">\n      <i class=\"fa fa-angle-right\"></i>\n    </button>\n  </div>\n</div>\n`,styles: []})\nexport class DateElementComponent implements AfterViewInit  {\n  @Input() label:string;\n  @Input() property:string;\n  @Input() src:any;\n  @Input() step = 1;\n  @Output() changed = new EventEmitter<any>();\n  \n  constructor(){\n\n  }\n\n  ngAfterViewInit(){\n\n  }\n\n  move(n:number){\n    this.src[this.property] += n;\n    this.changed.emit(this.src);\n  }\n}\n","import { Component, Input, ViewChild, AfterViewInit, ElementRef } from '@angular/core';\n\n\ndeclare var Plotly: any;\n\n@Component({\n  selector: 'share-view',\n  template: `<button class=\"btn btn-secondary btn-sm\"\n        ngbTooltip=\"Share current view\"\n        placement=\"right\"\n        [disabled]=\"true\"\n><i class=\"fa fa-share-alt\"></i></button>\n`,styles: []})\nexport class ShareViewComponent implements AfterViewInit  {\n\n  constructor(){\n\n  }\n\n  ngAfterViewInit(){\n\n  }\n}","import { Component, Input, ViewChild, AfterViewInit, ElementRef } from '@angular/core';\n\n\ndeclare var Plotly: any;\n\n@Component({\n  selector: 'location-search',\n  template: `<button class=\"btn btn-secondary btn-sm\"\n        ngbTooltip=\"Location search\"\n        placement=\"right\"\n        [disabled]=\"true\"\n\n><i class=\"fa fa-search\"></i></button>\n`,styles: []})\nexport class LocationSearchComponent implements AfterViewInit  {\n\n  constructor(){\n\n  }\n\n  ngAfterViewInit(){\n\n  }\n}","import { Component, Input, ViewChild, AfterViewInit, OnChanges, SimpleChanges,\n         Output, EventEmitter, ViewChildren, QueryList, NgZone } from '@angular/core';\nimport { MappedLayer, Bounds, LayerSelection, StaticDataService, MetadataService  } from 'map-wald';\nimport { DataMouseEvent, LatLng, AgmMap, AgmInfoWindow} from '@agm/core';\nimport { Feature, Point, GeometryObject } from 'geojson';\nimport { MapTypeControlOptions, ControlPosition } from '@agm/core/services/google-maps-types';\n\nexport interface SimpleMarker {\n  loc:LatLng;\n  value:string;\n  open:boolean;\n  iconUrl:string;\n  html?:string;\n}\n\n@Component({\n  selector: 'layered-map',\n  template: `<agm-map #theMap\n[(latitude)]=\"lat\"\n[(longitude)]=\"lng\"\n[(zoom)]=\"zoom\"\n(zoomChange)=\"zoomChanged()\"\n[disableDefaultUI]=\"false\"\n[zoomControl]=\"false\"\n[mapTypeId]=\"mapTypeId\"\n[mapTypeControl]=\"showMapType\"\n[mapTypeControlOptions]=\"mapTypeOptions\"\n[streetViewControl]=\"streetViewControl\"\nscaleControl=\"true\"\n[fitBounds]=\"_bounds\"\n(mapClick)=\"mapClick($event)\">\n\n<agm-marker *ngFor=\"let marker of markers\"\n            [longitude]=\"marker.loc.lng\"\n            [latitude]=\"marker.loc.lat\"\n            [iconUrl]=\"marker.iconUrl\">\n  <agm-info-window #infoWindows [disableAutoPan]=\"true\">\n    <strong>{{marker.value}}</strong>\n    <span *ngIf=\"marker.html\" [innerHTML]=\"marker.html\"></span>\n  </agm-info-window>\n</agm-marker>\n\n<ng-container *ngFor=\"let mp of layers.slice()|reverse; let i = index\" [ngSwitch]=\"mp.layerType\">\n  <wms-layer *ngSwitchCase=\"'wms'\"\n    [url]=\"mp.url\"\n    [params]=\"mp.wmsParameters\"\n    [opacity]=\"mp.opacity\"\n    [position]=\"mp.options.position\">\n  </wms-layer>\n  <agm-data-layer *ngSwitchCase=\"'vector'\"\n                [geoJson]=\"mp.staticData\"\n                [style]=\"mp._styleFunc\"\n                (layerClick)=\"clicked($event)\"\n                >\n  </agm-data-layer>\n\n  <ng-container *ngSwitchCase=\"'circle'\">\n    <agm-circle *ngFor=\"let f of mp.staticData.features; let j=index\"\n                [latitude]=\"f.geometry.coordinates[1]\"\n                [longitude]=\"f.geometry.coordinates[0]\"\n                [radius]=\"10000000/(zoom*zoom*zoom*zoom)\"\n                [fillColor]=\"mp.flattenedSettings?.styles?.fillColor||'black'\"\n                [fillOpacity]=\"mp.flattenedSettings?.styles?.fillOpacity||1\"\n                [strokeColor]=\"mp.flattenedSettings?.styles?.strokeColor||'black'\"\n                [strokeOpacity]=\"mp.flattenedSettings?.styles?.strokeOpacity||1\"\n                [strokePosition]=\"0\"\n                [strokeWeight]=\"(f===selectedFeature)?3:(mp.flattenedSettings?.styles?.strokeWeight||0.5)\"\n                (circleClick)=\"circleClicked(mp,f)\"\n                >\n    </agm-circle>\n  </ng-container>\n\n  <!--\n  -->\n</ng-container>\n\n<!-- for map controls -->\n<map-control position=\"TOP_CENTER\">\n    <ng-content select=\".map-control.top-center\"></ng-content>\n</map-control>\n\n<map-control position=\"TOP_LEFT\">\n    <ng-content select=\".map-control.top-left\"></ng-content>\n</map-control>\n\n<map-control position=\"TOP_RIGHT\">\n    <ng-content select=\".map-control.top-right\"></ng-content>\n</map-control>\n\n<map-control position=\"LEFT_TOP\">\n    <ng-content select=\".map-control.left-top\"></ng-content>\n</map-control>\n\n<map-control position=\"RIGHT_TOP\">\n    <ng-content select=\".map-control.right-top\"></ng-content>\n</map-control>\n\n<map-control position=\"LEFT_CENTER\">\n    <ng-content select=\".map-control.left-center\"></ng-content>\n</map-control>\n\n<map-control position=\"RIGHT_CENTER\">\n    <ng-content select=\".map-control.right-center\"></ng-content>\n</map-control>\n\n<map-control position=\"LEFT_BOTTOM\">\n    <ng-content select=\".map-control.left-bottom\"></ng-content>\n</map-control>\n\n<map-control position=\"RIGHT_BOTTOM\">\n    <ng-content select=\".map-control.right-bottom\"></ng-content>\n</map-control>\n\n<map-control position=\"BOTTOM_CENTER\">\n    <ng-content select=\".map-control.bottom-center\"></ng-content>\n</map-control>\n\n<map-control position=\"BOTTOM_LEFT\">\n    <ng-content select=\".map-control.bottom-left\"></ng-content>\n</map-control>\n\n<map-control position=\"BOTTOM_RIGHT\">\n    <ng-content select=\".map-control.bottom-right\"></ng-content>\n</map-control>\n\n</agm-map>\n\n`,styles: []})\nexport class LayeredMapComponent implements AfterViewInit, OnChanges {\n  @Input() layers: Array<MappedLayer> = [];\n  @Input() markers:Array<SimpleMarker> = [];\n  @Input() mapTypeId:string='roadmap';\n\n  @Output() layersChange = new EventEmitter<Array<MappedLayer>>();\n  @Output() featureSelected = new EventEmitter<{feature:Feature<GeometryObject>,layer?:MappedLayer}>();\n  @Output() pointSelected = new EventEmitter<LatLng>();\n  @Input() mapTypePosition:number = ControlPosition.BOTTOM_LEFT\n  @Input() streetViewControl = true;\n\n  @ViewChild(AgmMap,{static:false}) theMap:AgmMap;\n  @ViewChildren('infoWindows') infoWindows:QueryList<AgmInfoWindow>;\n\n  selectedFeature:any = null;\n  // google maps zoom level\n  @Input() zoom: number = 4;\n  @Input() showMapType = true;\n  mapTypeOptions: MapTypeControlOptions={\n    position:ControlPosition.BOTTOM_LEFT\n  };\n\n  // initial center position for the map\n  @Input() lat: number = -22.673858;\n  @Input() lng: number = 129.815982;\n  @Input() bounds:Bounds;\n  _bounds:Bounds;\n\n  constructor(private _zone:NgZone,\n              private staticData:StaticDataService,\n              private metadata:MetadataService) {\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    // if zoom in changes...\n    if(changes.mapTypePosition){\n      if(this.mapTypePosition===null){\n        this.showMapType = false;\n      }\n      this.mapTypeOptions = {\n        position:this.mapTypePosition\n      };\n    }\n\n    if(changes.layers){\n      this.setLayerPositions();\n    }\n\n    if(changes.markers&&this.markers){\n      // deal with existing info windows?\n      if(this.infoWindows){\n          this.infoWindows.forEach((w,i)=>{\n          this._zone.runOutsideAngular(()=>w.close());\n        });\n      }\n\n      setTimeout(()=>{\n        // Check and open relevant info windows...\n        this.infoWindows.forEach((w,i)=>{\n          let m = this.markers[i];\n          if(m.open){\n            this._zone.runOutsideAngular(()=>w.open());\n          } else {\n            this._zone.runOutsideAngular(()=>w.close());\n          }\n        });\n      });\n    }\n\n    if(changes.bounds){\n      setTimeout(()=>this._bounds=this.bounds);\n    }\n  }\n\n  ngAfterViewInit() {\n  }\n\n  layersChanged(changes: Array<MappedLayer>) {\n  }\n\n  layerAdded(selection: LayerSelection) {\n    var ex = this.layers.find(l => l.layer === selection.layer);\n    if (ex) {\n      return;\n    }\n\n    var mapped = new MappedLayer();\n    mapped.layer = selection.layer;\n\n    mapped.layerType = 'wms';\n    mapped.options.legend = true;\n\n    if(selection.layer.options.vectors){\n      this.staticData.get(selection.layer.options.host,selection.layer.options.filepath).subscribe(\n        (data:any)=>{\n          mapped.staticData=data;\n          this.activateLayer(mapped,selection);\n        });\n    } else {\n      this.activateLayer(mapped, selection);\n    }\n  }\n\n  private activateLayer(mapped: MappedLayer, selection: LayerSelection) {\n    mapped.update();\n    if (selection.action === 'replace') {\n      if(selection.filter){\n        this.layers = this.layers.filter(ml=>!selection.filter(ml));\n      } else {\n        this.layers = [];\n      }\n    }\n    this.layers = [mapped].concat(this.layers);\n    this.setLayerPositions();\n    this.layersChange.emit(this.layers);\n  }\n\n  setLayerPositions(){\n    let ix=0;\n    for(var i=this.layers.length-1;i>=0;i--){\n      if(this.layers[i].layerType==='wms'){\n        this.layers[i].options.position=ix;\n        ix++;\n      }\n    }\n  }\n  extractFeature(f:any) : Feature<Point>{\n    var geo = f.getGeometry();\n    geo = {\n      type:'Point',\n      coordinates:geo.get(0)\n    }\n\n    var props:{[key:string]:any} = {};\n    f.forEachProperty((val:any,prop:string)=>props[prop]=val);\n\n    return {\n      type:'Feature',\n      geometry:geo,\n      properties:props\n    };\n  }\n\n  clicked(event:DataMouseEvent){\n    var feature = this.extractFeature(event.feature);\n    this.selectedFeature = feature;\n    this.featureSelected.emit({feature:feature});\n  }\n\n  circleClicked(ml:MappedLayer,feature:any){\n    this.selectedFeature = feature;\n    this.featureSelected.emit({feature:feature,layer:ml});\n  }\n\n  mapClick(event:any){\n    var coords:LatLng = event.coords;\n    this.pointSelected.emit(coords);\n  }\n\n  zoomToBounds(bounds:Bounds){\n    this._bounds = bounds;\n  }\n\n  zoomChanged(){\n    this.layers = this.layers.slice();\n  }\n}\n","import { Component, Input, ViewChild, AfterViewInit, ElementRef } from '@angular/core';\nimport { LayeredMapComponent } from '../../layered-map/layered-map.component';\nimport { MappedLayer, Bounds } from 'map-wald';\n\n\ndeclare var Plotly: any;\n\n@Component({\n  selector: 'zoom-layer',\n  template: `<button type=\"button\" [disabled]=\"!layer\" class=\"btn btn-secondary btn-sm\"\n        ngbTooltip=\"Zoom to selected layer\"\n        placement=\"right\"\n        (click)=\"zoomToLayer()\"\n><i class=\"fa fa-compress\"></i>\n</button>\n`,styles: []})\nexport class ZoomLayerComponent implements AfterViewInit {\n  @Input() map: LayeredMapComponent;\n  @Input() layer: MappedLayer;\n  @Input() fullBounds: Bounds;\n\n  constructor() {\n\n  }\n\n  ngAfterViewInit() {\n\n  }\n\n  zoomToLayer() {\n    if(this.layer.layer.spatialExtent){\n      console.log('Zoom to layer');\n      this.layer.layer.spatialExtent.subscribe(b=>{\n        this.map.zoomToBounds(Object.assign({},b));\n      });\n    } else {\n      console.log('Zoom full');\n      this.map.zoomToBounds(Object.assign({}, this.fullBounds));\n    }\n  }\n}\n","import { Component, Input, ViewChild, AfterViewInit, ElementRef } from '@angular/core';\nimport { LayeredMapComponent } from '../../layered-map/layered-map.component';\nimport { Bounds } from 'map-wald';\n\n\ndeclare var Plotly: any;\n\n@Component({\n  selector: 'zoom-full',\n  template: `<button class=\"btn btn-secondary btn-sm\"\n        ngbTooltip=\"Zoom to full extent\"\n        placement=\"right\"\n        (click)=\"zoomToBounds()\"\n><i class=\"fa fa-arrows-alt\"></i></button>\n`,styles: []})\nexport class ZoomFullComponent implements AfterViewInit  {\n  @Input() map:LayeredMapComponent;\n  @Input() bounds:Bounds;\n\n  constructor(){\n\n  }\n\n  ngAfterViewInit(){\n\n  }\n\n  zoomToBounds(){\n    this.map.zoomToBounds(Object.assign({},this.bounds));\n  }\n}\n","import { Component, Input, ViewChild, AfterViewInit, ElementRef } from '@angular/core';\nimport { LayeredMapComponent } from '../../layered-map/layered-map.component';\n\n\ndeclare var Plotly: any;\n\n@Component({\n  selector: 'zoom-out',\n  template: `<button class=\"btn btn-secondary btn-sm\"\n        ngbTooltip=\"Zoom out\"\n        placement=\"right\"\n        (click)=\"zoomOut()\"\n><i class=\"fa fa-minus\"></i></button>`,styles: []})\nexport class ZoomOutComponent implements AfterViewInit  {\n  @Input() map:LayeredMapComponent;\n  @Input() minZoom:number = 1;\n  constructor(){\n\n  }\n\n  ngAfterViewInit(){\n\n  }\n\n  zoomOut(){\n    if(!this.map){\n      return;\n    }\n    this.map.zoom = Math.max(this.minZoom, this.map.zoom - 1);\n  }\n}\n","import { Component, Input, ViewChild, AfterViewInit, ElementRef } from '@angular/core';\nimport { LayeredMapComponent } from '../../layered-map/layered-map.component';\n\n\ndeclare var Plotly: any;\n\n@Component({\n  selector: 'zoom-in',\n  template: `<button class=\"btn btn-secondary btn-sm\"\n        ngbTooltip=\"Zoom in\"\n        placement=\"right\"\n        (click)=\"zoomIn()\"\n><i class=\"fa fa-plus\"></i></button>`,styles: []})\nexport class ZoomInComponent implements AfterViewInit  {\n  @Input() map:LayeredMapComponent;\n  @Input() maxZoom:number = 32;\n\n  constructor(){\n\n  }\n\n  ngAfterViewInit(){\n\n  }\n\n  zoomIn(){\n    if(!this.map){\n      return;\n    }\n    this.map.zoom = Math.min(this.maxZoom,this.map.zoom+1);\n  }\n}\n","import { Component, Input, ViewChild, AfterViewInit, ElementRef, OnChanges, SimpleChanges } from '@angular/core';\nimport { LayeredMapComponent } from '../../layered-map/layered-map.component';\n\nexport interface BaseLayer {\n  map_type_id: string;\n  label: string;\n  icon?: string;\n}\n\ndeclare var Plotly: any;\n\n@Component({\n  selector: 'cycle-base-map',\n  template: `<button class=\"btn btn-secondary btn-sm\" (click)=\"toggleBaseLayer()\" [ngbTooltip]=\"tooltip\"\n                     placement=\"right\">\n  <i class=\"fa\" [ngClass]=\"baseLayer?.label==='Road Map'?'fa-road':'fa-globe'\"></i>\n</button>`,styles: []})\nexport class CycleBaseMapComponent implements AfterViewInit, OnChanges  {\n  @Input() map:LayeredMapComponent;\n  @Input() maxZoom:number = 32;\n  @Input() baseLayers:BaseLayer[] = [\n    {\n      map_type_id : 'roadmap',\n      label : 'Road Map'\n    },\n    {\n      map_type_id : 'satellite',\n      label : 'Satellite'\n    }\n  ]\n  @Input() baseLayer:BaseLayer;\n  @Input() tooltip = 'Toggle base layer';\n\n  constructor(){\n\n  }\n\n  ngAfterViewInit(){\n\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if(this.baseLayers && !this.baseLayer){\n      this.baseLayer = this.baseLayers[0];\n    }\n  }\n\n  toggleBaseLayer(){\n    if(!this.map){\n      return;\n    }\n\n    let current = this.baseLayers.findIndex(l=>l.map_type_id===this.baseLayer.map_type_id);\n    let next = (current+1)%this.baseLayers.length;\n    this.baseLayer = this.baseLayers[next];\n\n    this.map.mapTypeId = this.baseLayer ?\n                                this.baseLayer.map_type_id:\n                                null;\n  }\n}\n","import { Component, Input, ViewChild, AfterViewInit, ElementRef, OnChanges, SimpleChanges } from '@angular/core';\nimport { LayeredMapComponent } from '../../layered-map/layered-map.component';\n\n\ndeclare var Plotly: any;\n\n@Component({\n  selector: 'cycle-opacity',\n  template: `<button class=\"btn btn-secondary btn-sm\"\n                     (click)=\"cycleTransparency()\"\n                     [ngbTooltip]=\"tooltip\"\n                     placement=\"right\">\n<i class=\"fa\" [ngClass]=\"(layerOpacity<0.5)?'fa-circle-o':((layerOpacity<0.9)?'fa-adjust':'fa-circle')\"></i>\n</button>`,styles: []})\nexport class CycleOpacityComponent implements AfterViewInit, OnChanges  {\n  @Input() map:LayeredMapComponent;\n  @Input() maxZoom = 32;\n  @Input() tooltip = 'Adjust transparency of grid layer';\n  @Input() layerOpacity = 1.0;\n  @Input() step = 0.4;\n\n  constructor(){\n\n  }\n\n  ngAfterViewInit(){\n\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if(this.map){\n      this.map.layersChange.subscribe(()=>this.updateLayers());\n    }\n  }\n\n  cycleTransparency(){\n    this.layerOpacity -= this.step;\n    if(this.layerOpacity<0){\n      this.layerOpacity = 1.0;\n    }\n    this.updateLayers();\n  }\n\n  private updateLayers() {\n    this.map.layers.forEach(l => l.opacity = this.layerOpacity);\n  }\n}\n","import { Component, Input, ViewChild, AfterViewInit, ElementRef } from '@angular/core';\n\n\ndeclare var Plotly: any;\n\n@Component({\n  selector: 'button-bar',\n  template: `<div class=\"button-bar bb-vertical\">\n  <ng-content></ng-content>\n</div>\n\n`,styles: [`\n`]})\nexport class ButtonBarComponent implements AfterViewInit  {\n\n  constructor(){\n\n  }\n\n  ngAfterViewInit(){\n\n  }\n}","/// <reference path=\"../decs.d.ts\" />\n\nimport { Component, Input, ViewChild, AfterViewInit, ElementRef, OnChanges, SimpleChanges } from '@angular/core';\nimport { TimeSeries } from 'map-wald';\n//import * as Plotly from 'plotly.js/dist/plotly-basic';\n\n//declare var Plotly: any;\n//const Plotly = require('plotly.js/dist/plotly-basic');\n\nimport * as Plotly from 'plotly.js/dist/plotly-basic';\n// import * as Plotly from 'plotly.js';\n\n@Component({\n  selector: 'timeseries-chart',\n  template: `<div class=\"our-chart\">\n</div>\n`,styles: []})\nexport class TimeseriesChartComponent implements AfterViewInit, OnChanges  {\n  @Input() title:string;\n  @Input() timeSeries: Array<TimeSeries> = [];\n  @Input() marginLeft:number = 40;\n  @Input() marginRight:number = 10;\n  @Input() marginTop:number = 0;\n  @Input() marginBottom:number = 20;\n  @Input() titlefont:any = undefined;\n\n  constructor(private _element:ElementRef){\n\n  }\n\n  ngAfterViewInit(){\n    this.draw();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.draw();\n  }\n\n  draw(){\n    var node = this._element.nativeElement.querySelector('.our-chart');\n\n    Plotly.purge(node);\n\n        if(!this.timeSeries || !this.timeSeries.length){\n      return;\n    }\n\n    const seriesUnits = this.timeSeries.map(ts=>ts.units);\n    let commonUnits:string;\n    if(seriesUnits.every(u=>u===seriesUnits[0])){\n      commonUnits = seriesUnits[0];\n    }\n\n    var layout:any = {\n      margin: {\n        t: this.marginTop + (this.title?30:0),\n        l:this.marginLeft,\n        r:this.marginRight,\n        b:this.marginBottom\n      },\n      yaxis:{\n        fixedrange: true,\n        title:commonUnits\n      },\n      width:320,\n      height:200,\n      title:this.title || undefined,\n      titlefont:this.titlefont\n    };\n\n    Plotly.plot( node, this.timeSeries.map(ts=>{\n      const nonNullCount = ts.values.filter(v=>!isNaN(v)).length;\n      const mode = ((ts.style!=='bar')&&(nonNullCount<365)) ?\n                   'lines+markers' :\n                   undefined;\n      const suffix = commonUnits?'':` (${ts.units})`;\n      return {\n        type:(ts.style==='bar')?'bar':undefined,\n        mode:mode,\n        x:ts.dates,\n        y:ts.values,\n        name:ts.label+suffix\n      };\n    }), layout );\n  }\n}\n","import { Component, Input, AfterViewInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { LayerPropertyStyle } from 'map-wald';\n\n@Component({\n  selector: 'feature-table',\n  template: `<table *ngIf=\"feature\" class=\"table table-striped table-sm feature-table\">\n  <thead>\n    <tr>\n      <td><strong>Property</strong></td>\n      <td><strong>Value</strong></td>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><strong>Geometry</strong></td>\n      <td>{{feature.geometry.type}}</td>\n    </tr>\n    <tr *ngFor=\"let prop of _keys(feature.properties)\">\n      <td><strong>{{prop}}</strong></td>\n      <td *ngIf=\"!styles||!styles[prop]\">{{feature.properties[prop]}}</td>\n      <td *ngIf=\"styles&&styles[prop]\">\n        <a *ngIf=\"styles[prop].hyperlink\" target=\"_blank\" [href]=\"feature.properties[prop]\">\n          {{feature.properties[prop]}}\n        </a>\n      </td>\n    </tr>\n  </tbody>\n</table>`,styles: [`.feature-table{\n  max-width:300px;\n}`]})\nexport class FeatureTableComponent implements AfterViewInit, OnChanges {\n  @Input() feature: any;\n  @Input() styles: {[key:string]:LayerPropertyStyle} = {}\n  _keys = Object.keys;\n\n  constructor(){\n\n  }\n\n  ngAfterViewInit(){\n\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if(!this.styles){\n      this.styles = {};\n    }\n  }\n}\n","import { Component, Input, ViewChild, AfterViewInit, ElementRef } from '@angular/core';\n\n\ndeclare var Plotly: any;\n\n@Component({\n  selector: 'collapsible-map-control',\n  template: `<div class=\"card map-control collapsible-control\">\n    <a (click)=\"isCollapsed = !isCollapsed\">\n      <div class=\"card-header\">\n        <h6 class=\"mb-0\">\n          {{heading}}\n          <span *ngIf=\"isCollapsed\" class=\"float-right fa fa-caret-up\n            collapse-arrow\" aria-hidden=\"true\"></span>\n          <span *ngIf=\"!isCollapsed\" class=\"float-right fa fa-caret-down\n            collapse-arrow\" aria-hidden=\"true\"></span>\n        </h6>\n      </div>\n    </a>\n\n    <div class=\"ngbCollapse\" [ngbCollapse]=\"isCollapsed\">\n      <ng-content></ng-content>\n    </div>\n  </div>\n`,styles: [`.collapsible-control{\n  margin:3px;\n}`]})\nexport class CollapsibleMapControlComponent implements AfterViewInit  {\n  @Input() isCollapsed: boolean;\n  @Input() heading: string;\n  @Input() direction: string;\n\n  constructor(){\n\n  }\n\n  ngAfterViewInit(){\n\n  }\n}","import { Component, Input, ViewChild, AfterViewInit, ElementRef } from '@angular/core';\n\n\ndeclare var Plotly: any;\n\n@Component({\n  selector: 'base-map-selection',\n  template: `<p>base-map-selection Component</p>`,styles: []})\nexport class BaseMapSelectionComponent implements AfterViewInit  {\n\n  constructor(){\n\n  }\n\n  ngAfterViewInit(){\n\n  }\n}","import { Component, Input, ViewChild, AfterViewInit, ElementRef,\n  EventEmitter, Output, OnChanges, SimpleChanges } from '@angular/core';\nimport { TreeModel } from 'map-wald';\n\ndeclare var Plotly: any;\n\n@Component({\n  selector: 'simple-tree-node',\n  template: `<a href=\"#\"\n                (click)=\"treeClick($event)\"\n                [ngClass]=\"tree.klass\"><i [ngClass]=\"icon\"></i>\n  &nbsp;\n  <span ngbTooltip=\"{{tree.tooltip | async}}\"\n        placement=\"right\"\n        container=\"body\">{{tree.label}}</span>\n  <span *ngIf=\"tree.actions\"\n        class=\"float-right\">\n      &nbsp;\n      <i *ngFor=\"let a of tree.actions\"\n       [ngClass]=\"a.icon\"\n       ngbTooltip=\"{{a.tooltip | async}}\"\n       placement=\"right\"\n       container=\"body\"\n       (click)=\"a.action(tree)\">&nbsp;</i>\n  </span>\n</a>\n`,styles: []})\nexport class SimpleTreeNodeComponent implements AfterViewInit, OnChanges{\n  ngOnChanges(changes: SimpleChanges): void {\n    this.evalState();\n  }\n\n  ngAfterViewInit(): void {\n  }\n\n  @Input() tree: TreeModel;\n  @Input() options:any = {};\n  @Output() nodeSelected = new EventEmitter();\n\n  expanded: boolean;\n  leaf: boolean;\n  collapsed: boolean;\n  icon: string;\n\n  treeClick(event: any) {\n    event.stopPropagation();\n    event.preventDefault();\n    if (!this.tree) {\n      return;\n    }\n    this.tree.expanded = !this.tree.expanded;\n    this.evalState();\n\n    if(this.tree.actions&&this.tree.actions.length){\n      this.tree.actions[0].action(this.tree);\n    } else {\n      this.nodeSelected.emit(this.tree);\n    }\n  }\n\n  private evalState() {\n    this.expanded = this.tree &&\n      this.tree.expanded &&\n      this.tree.children &&\n      this.tree.children.length > 0;\n    this.leaf = this.tree && (!this.tree.children || this.tree.children.length === 0);\n    this.collapsed = this.tree &&\n      !this.tree.expanded &&\n      this.tree.children &&\n      this.tree.children.length > 0;\n    if (this.expanded) {\n      this.icon = this.options.expandedIcon;\n    }\n    else if (this.collapsed) {\n      this.icon = this.options.collapsedIcon;\n    }\n    else {\n      this.icon = this.options.leafIcon;\n    }\n  }\n}\n","import { Component, Input, ViewChild, AfterViewInit, ElementRef, OnChanges, SimpleChanges, Output, EventEmitter } from '@angular/core';\nimport { TreeModel } from 'map-wald';\n\ndeclare var Plotly: any;\n\n@Component({\n  selector: 'simple-tree',\n  template: `<div *ngIf=\"tree&&tree.visible\" class=\"simple-tree\">\n\n  <div *ngIf=\"inner\">\n    <li ><simple-tree-node [tree]=\"tree\"\n                           [options]=\"options\"\n                           (nodeSelected)=\"childSelected($event)\"></simple-tree-node>\n      <ul *ngIf=\"tree.children&&tree.expanded\" class=\"inner-list\">\n        <simple-tree *ngFor=\"let t of tree.children\" [tree]=\"t\" [inner]=\"true\"\n                    (nodeSelected)=\"childSelected($event)\"\n                    [options]=\"options\"></simple-tree>\n      </ul>\n    </li>\n  </div>\n\n  <div *ngIf=\"!inner&&showTop\">\n    <ul class=\"outer-list\">\n      <li><simple-tree-node [tree]=\"tree\" [options]=\"options\"\n        (nodeSelected)=\"childSelected($event)\"></simple-tree-node>\n        <ul *ngIf=\"tree.children&&tree.expanded\" class=\"inner-list\">\n            <simple-tree *ngFor=\"let t of tree.children\" [tree]=\"t\" [inner]=\"true\"\n            (nodeSelected)=\"childSelected($event)\"\n            [options]=\"options\"></simple-tree>\n        </ul>\n      </li>\n    </ul>\n  </div>\n\n  <div *ngIf=\"!inner&&!showTop\">\n      <ul *ngIf=\"tree.children&&tree.expanded\" class=\"outer-list\">\n          <simple-tree *ngFor=\"let t of tree.children\" [tree]=\"t\" [inner]=\"true\"\n          (nodeSelected)=\"childSelected($event)\"\n          [options]=\"options\"></simple-tree>\n      </ul>\n    </div>\n\n</div>\n`,styles: [`\n.simple-tree ul{\n  list-style-type: none\n}\n\nul.outer-list{\n  padding-left:5px;\n}\n\nul.inner-list{\n  padding-left:15px;\n}`]})\nexport class SimpleTreeComponent implements AfterViewInit, OnChanges {\n  @Input() tree: TreeModel;\n  @Input() showTop: boolean = true;\n  @Input() inner: boolean;\n\n  @Input() collapsedIcon = 'fa fa-caret-right';\n  @Input() expandedIcon = 'fa fa-caret-down';\n  @Input() leafIcon = 'fa fa-minus';\n\n  @Output() nodeSelected = new EventEmitter();\n\n  @Input() options:any = {};\n\n  constructor() {\n\n  }\n\n  ngAfterViewInit() {\n\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if(changes.options){\n      return;\n    }\n\n    this.options = {\n      collapsedIcon:this.collapsedIcon,\n      expandedIcon:this.expandedIcon,\n      leafIcon:this.leafIcon\n    };\n  }\n\n  childSelected(node:TreeModel){\n    this.nodeSelected.emit(node);\n  }\n\n}\n","import {\n  Component, Input, ViewChild, AfterViewInit, ElementRef,\n  OnChanges, Output, EventEmitter, SimpleChanges\n} from '@angular/core';\nimport { Catalog,  Layer, Theme, LayerSelection, TreeModel,\n  TreeFilterService, MetadataService, MappedLayer } from 'map-wald';\nimport { map } from 'rxjs/operators';\nimport { of } from 'rxjs';\n\ndeclare var Plotly: any;\n\nexport interface CatalogNodeAction {\n  action:string;\n  icon:string;\n  tooltip:string;\n}\n\n@Component({\n  selector: 'catalog',\n  template: `<div class=\"input-group\">\n  <span class=\"input-group-btn\">\n            <button class=\"btn\" type=\"button\" [disabled]=\"!filterText\"\n              (click)=\"filterText = ''\">\n            <i *ngIf=\"filterText\"class=\"fa fa-times\" aria-hidden=\"true\"></i>\n            <i *ngIf=\"!filterText\"class=\"fa fa-search\" aria-hidden=\"true\"></i>\n            </button>\n  </span>\n  <input #filterInput type=\"text\" class=\"form-control\" placeholder=\"Catalog search...\"\n  [(ngModel)]=\"filterText\"/>\n</div>\n\n<simple-tree\n  [tree]=\"this.filterService.filterTree(tree, filterText)\"\n  [showTop]=\"false\"\n  [leafIcon]=\"leafIcon\"\n  [collapsedIcon]=\"collapsedIcon\"\n  [expandedIcon]=\"expandedIcon\"\n  (nodeSelected)=\"nodeSelected($event)\">\n</simple-tree>\n`,styles: [`\n.node-name{\n  font-size:1em;\n}\n`],})\nexport class CatalogComponent implements AfterViewInit, OnChanges {\n  @Input() catalog: Catalog;\n  @Input() showPlaceholders = true;\n  @Input() defaultAction = 'add';\n  @Input() layerActions: CatalogNodeAction[] = [];\n  @Output() layerSelected: EventEmitter<LayerSelection> = new EventEmitter<LayerSelection>();\n  @Input() collapsedIcon = 'fa fa-caret-right';\n  @Input() expandedIcon = 'fa fa-caret-down';\n  @Input() leafIcon = 'fa fa-minus';\n\n  layers: Array<Layer> = [];\n  tree: TreeModel = { label: 'no catalog loaded' };\n  filterText = '';\n\n  filterService: TreeFilterService;\n\n  constructor(filterService: TreeFilterService, private metadata:MetadataService) {\n    this.filterService = filterService;\n  }\n\n  ngAfterViewInit() {\n    if (this.catalog) {\n      this.buildTree();\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.catalog && this.catalog) {\n      this.filterText = '';\n      this.buildTree();\n      this.highlightLayers([],this.tree);\n    }\n  }\n\n  buildTree() {\n    let self = this;\n    this.layers = [];\n    var cat = this.catalog;\n    var tree: TreeModel = {\n      label: cat.name,\n      expanded: true,\n      visible: true,\n      // settings:{\n      //   static:true,\n      //   leftMenu:false\n      // }\n    }\n\n    var deferredLayers = cat.themes.map(t => t.layers.filter(l => l.path&&!l.skip)).reduce((l, r) => l.concat(r), []);\n    var deferredThemes = cat.themes.filter(t => t.path&&!t.skip);\n\n    const treeActions = this.layerActions.map(la=>{\n      return {\n        icon:la.icon,\n        tooltip:la.tooltip,\n        action:(node: TreeModel) => this.layerClick(node.data,la.action)\n      };\n    });\n\n    const layerToTree = (l: Layer)=> {\n      let result:TreeModel = {\n        label: l.name,\n        data: l,\n        visible: true,\n        actions: treeActions\n      };\n\n      const tmp = new MappedLayer();\n      tmp.layer = l;\n      tmp.update();\n\n      if(l.description){\n        result.tooltip = of(l.description);\n      } else {\n        result.tooltip = this.metadata.getMetadata(tmp).pipe(\n          map(meta=>meta[l.descriptionField||'long_name'])\n        );\n      }\n      return result;\n    }\n\n    function themeToTree(t: Theme): TreeModel {\n      return {\n        label: t.name,\n        expanded: false,\n        visible: true,\n        children: t.layers.filter(l => !l.path&&!l.skip)\n          .filter(l=>self.showPlaceholders||!l.placeholder)\n          .map(layerToTree)\n      };\n    }\n\n    tree.children = cat.themes.filter(t => !t.path&&!t.skip).map(themeToTree);\n\n    function findParent(path: string): [TreeModel,number] {\n      var components = path.split('/');\n      var parent: TreeModel = tree;\n      var index = -1;\n\n      for (var component of components) {\n        var split = component.split('@');\n        component = split[0];\n        index = -1;\n        if(split.length>1){\n          index = +split[1];\n        }\n\n        var found = false;\n        for (var n of parent.children) {\n          if (n.label === component) {\n            parent = n;\n            found = true;\n            break;\n          }\n        }\n\n        if (!found) {\n          var newNode: TreeModel = {\n            label: component,\n            expanded: false,\n            visible: true,\n            children: []\n          };\n          addChild(parent,newNode,index);\n          parent = newNode;\n        }\n      }\n      return [parent,index];\n    }\n\n    function addChild(parent:TreeModel,child:TreeModel,i:number){\n      if(i<0){\n        parent.children.push(child);\n      } else {\n        parent.children.splice(i,0,child);\n      }\n    }\n\n    deferredThemes.forEach(t => {\n      var [parent,index] = findParent(t.path);\n      addChild(parent,themeToTree(t),index);\n    });\n\n    deferredLayers.forEach(l => {\n      var [parent,index] = findParent(l.path);\n      addChild(parent,layerToTree(l),index);\n    });\n    this.tree = tree;\n  }\n\n  layerClick(l: Layer,action:string) {\n    var selection: LayerSelection = {\n      layer: l,\n      action: action\n    };\n    this.layerSelected.emit(selection);\n  }\n\n  nodeSelected(e: TreeModel) {\n    if (!e.data) {\n      return;\n    }\n\n    var layer = <Layer>e.data;\n    this.layerClick(layer,this.defaultAction);\n  }\n\n  activeLayers(layers:Layer[]){\n    this.highlightLayers(layers,this.tree);\n  }\n\n  highlightLayers(layers:Layer[],tree:TreeModel):boolean{\n    tree.klass = null;\n\n    if(tree.data&&(layers.indexOf(tree.data)>=0)){\n      tree.klass = 'active-layer';\n      return true;\n    }\n\n    if(tree.children){\n      let activeChild = false;\n      for(let i=0;i<tree.children.length;i++){\n        activeChild = this.highlightLayers(layers,tree.children[i]) || activeChild;\n      }\n      if(activeChild){\n        tree.klass = 'active-child';\n      }\n      tree.klass = (tree.klass||'') + ' theme';\n      return activeChild;\n    }\n\n    return false;\n  }\n}\n","import { Component, Input, ViewChild, AfterViewInit, ElementRef, Output, EventEmitter } from '@angular/core';\nimport { NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\nimport { TimeUtilsService, InterpolationService } from 'map-wald';\n\nconst MILLISECONDS_PER_DAY=24*60*60*1000;\n\ndeclare var Plotly: any;\n\n@Component({\n  selector: 'date-selection',\n  template: `<div class=\"date-control container-fluid\">\n  <div *ngIf=\"style!=='arrows'\" class=\"row no-gutters\">\n    <div class=\"col-8 form-group-inline\">\n        <div class=\"input-group input-group-sm\">\n          <input class=\"form-control form-control-sm\" placeholder=\"yyyy-mm-dd\"\n                 name=\"dp\" [(ngModel)]=\"dateStruct\" (ngModelChange)=\"dateStructChanged()\"\n                 ngbDatepicker #d=\"ngbDatepicker\"\n                 [maxDate]=\"maxDateStruct\" [minDate]=\"minDateStruct\">\n          <div class=\"input-group-addon\" (click)=\"d.toggle()\" >\n            <i class=\"fa fa-calendar\"></i>\n          </div>\n        </div>\n      </div>\n\n    <!--\n      <div class=\"col-2\" >\n        <button class=\"btn btn-secondary btn-sm\" [disabled]=\"atMax\"\n                (click)=\"move(1)\"><i class=\"fa fa-chevron-right\"></i></button>\n      </div>\n    -->\n  </div>\n\n  <div *ngIf=\"style==='arrows'\">\n    <date-element *ngIf=\"need.day\"   [src]=\"dateStruct\" [property]=\"'day'\" [label]=\"'Day'\"\n                  [step]=\"stepDays\"\n                  (changed)=\"dateStructChanged()\"></date-element>\n    <date-element *ngIf=\"need.month\" [src]=\"dateStruct\" [property]=\"'month'\" [label]=\"'Month'\"\n                  (changed)=\"dateStructChanged()\"></date-element>\n    <date-element *ngIf=\"need.year\"  [src]=\"dateStruct\" [property]=\"'year'\" [label]=\"'Year'\"\n                  (changed)=\"dateStructChanged()\"></date-element>\n  </div>\n</div>\n`,styles: []})\nexport class DateSelectionComponent implements AfterViewInit  {\n  @Input() date: Date;\n  @Output() dateChange = new EventEmitter();\n  @Input() timestep: string;\n  @Input() minDate: Date|string;\n  @Input() maxDate: Date|string;\n  @Input() style: ('popup'|'arrows') = 'arrows';\n  @Input() stepDays = 1;\n  @Input() referenceDate:string = null;\n\n  need = {\n    day:true,\n    month:true,\n    year:true\n  };\n\n  minDateStruct:NgbDateStruct;\n  maxDateStruct:NgbDateStruct;\n  dateStruct:NgbDateStruct;\n\n  atMax:boolean=false;\n  atMin:boolean=false;\n\n  constructor(private timeUtils: TimeUtilsService){\n\n  }\n\n  ngAfterViewInit(){\n\n  }\n\n  ngOnChanges(changes:any){\n    if(changes.minDate){\n      this.minDateStruct = this.timeUtils.convertDate(this.minDate);\n    }\n\n    if(changes.maxDate){\n      this.maxDateStruct = this.timeUtils.convertDate(this.maxDate);\n    }\n\n    if(changes.date){\n      this.dateStruct = this.timeUtils.convertDate(this.date);\n    }\n\n    if(changes.timestep){\n      this.assessDateComponents();\n    }\n    this.checkLimits();\n  }\n\n  dateStructChanged(){\n    this.date = new Date(Date.UTC(this.dateStruct.year,this.dateStruct.month-1,this.dateStruct.day));\n    // this.date.setUTCFullYear(this.dateStruct.year)\n    // this.date.setUTCMonth(this.dateStruct.month-1)\n    // this.date.setUTCDate(this.dateStruct.day);\n    this.checkReference();\n    this.dateChange.emit(this.date);\n  }\n\n  assessDateComponents(){\n    this.need.day = this.need.month = this.need.year = true;\n    if(this.timestep==='daily'){\n      return;\n    }\n    this.need.day = false;\n\n    if(this.timestep==='annual') {\n      this.need.month = false;\n    }\n  }\n\n  move(n:number){\n    this.date = new Date(this.date&&this.date.getTime());\n    this.date.setDate(this.date.getDate()+n);\n    this.onDateChanged();\n    this.dateChange.emit(this.date);\n  }\n\n  onDateChanged(){\n    this.checkLimits();\n  }\n\n  checkLimits(){\n    this.atMax = this.timeUtils.datesEqual(this.dateStruct,this.maxDateStruct);\n    this.atMin = this.timeUtils.datesEqual(this.dateStruct,this.minDateStruct);\n  }\n  // TODO not enforcing limits etc...\n\n  checkReference(): any {\n    if(!this.referenceDate){\n      return;\n    }\n\n    let refComponents = InterpolationService.interpolate(this.referenceDate,{\n      year:this.date.getFullYear(),\n      month:this.date.getMonth()+1,\n      date:this.date.getDate()\n    }).split('-').map(s=>+s);\n\n    let currentRef = new Date(Date.UTC(refComponents[0],refComponents[1]-1,refComponents[2]));\n\n    console.log('currentRef',currentRef);\n    console.log('currentDate',this.date);\n    let timeSpan = MILLISECONDS_PER_DAY * this.stepDays;\n\n    let days = (this.date.getTime() - currentRef.getTime())/timeSpan;\n    this.date = new Date(currentRef.getTime() + Math.round(days)*timeSpan);\n    this.dateStruct = this.timeUtils.convertDate(this.date);\n  }\n\n}\n","import { Component, Input, ViewChild, AfterViewInit, ElementRef, Output, EventEmitter, OnDestroy } from '@angular/core';\nimport { MappedLayer, Publication, LayerTagValue, LayerTagMap,\n  PointSelectionService, PointSelection } from 'map-wald';\nimport { LayeredMapComponent } from '../layered-map/layered-map.component';\nimport { GeometryObject, Feature } from 'geojson';\n\ndeclare var Plotly: any;\n\n@Component({\n  selector: 'layer-properties',\n  template: `<div class=\"container-fluid\">\n  <p><strong>{{layer?.title}}</strong>\n    <span *ngIf=\"layer.description()\"\n    [ngbTooltip]=\"layer.description()\"\n    [placement]=\"tooltipPlacement\"\n    class=\"layer-info-target\"\n    container=\"body\">\n  &nbsp;<i class=\"fa fa-info-circle\"></i>\n  </span>\n  &nbsp;<span *ngIf=\"layer.interpolatedDownloadURL\">\n    <small><a target=\"_blank\"\n              [href]=\"layer.interpolatedDownloadURL\"\n              [ngbTooltip]=\"'Download data'\"\n              container=\"body\">\n      <i class=\"fa fa-download\"></i>\n    </a></small>\n  </span>\n  </p>\n\n  <div *ngIf=\"layer?.layer.publications.length>1\">\n    <span *ngIf=\"layer.layer.publications[0].timestep\">Timestep </span>\n    <span *ngIf=\"!layer.layer.publications[0].timestep\">{{ layer.layer.options.publicationLabel || 'Variable' }} </span>\n    <select [(ngModel)]=\"layer.options.publication\" (ngModelChange)=\"publicationSelected($event)\">\n      <option *ngFor=\"let p of layer.layer.publications; let i=index\" [ngValue]=\"i\">{{p.label || p.timestep}}</option>\n    </select>\n  </div>\n  <div *ngIf=\"layer?.layer.publications.length===1\">\n    {{publication?.label}}\n  </div>\n\n  <div *ngIf=\"publication&&publication.timestep\">\n    <hr/>\n    <date-selection [(date)]=\"layer.options.date\"\n      (dateChange)=\"update($event)\"\n      [timestep]=\"publication.timestep\"\n      [stepDays]=\"publication.timestepMultiplier||1\"\n      [referenceDate]=\"publication.timestepReference\"\n      [minDate]=\"publication.options.start\"\n      [maxDate]=\"publication.options.end\"></date-selection>\n  </div>\n\n  <div *ngIf=\"layer.layer.options.smallExtent\">\n    <hr/>\n    <button class=\"btn btn-sm btn-primary\" (click)=\"zoomToExtent()\">Zoom to Extent</button>\n  </div>\n\n<!--\n  <div *ngIf=\"layer.layer.options.vectors\">\n    <p>Lets filter those {{layer.layer.options.vectors}}s, eh?</p>\n  </div>\n-->\n\n  <div *ngIf=\"availableTags\">\n    <div *ngFor=\"let tag of getKeys(availableTags)\">\n      {{tag}}\n      <select [(ngModel)]=\"tags[tag]\" (ngModelChange)=\"tagChanged(tag)\">\n        <option *ngFor=\"let val of availableTags[tag]\" [ngValue]=\"val.value\">{{val.label}}</option>\n      </select>\n    </div>\n  </div>\n\n  <div *ngIf=\"publication?.pointdata\">\n    Variable:\n    <select [(ngModel)]=\"selectedVariable\" (ngModelChange)=\"queryPointData()\">\n      <option *ngFor=\"let v of pointVariables\" [ngValue]=\"v.value\">{{v.label}}</option>\n    </select>\n  </div>\n  <!--\n  <div *ngIf=\"publication\">\n    <p>Start: {{publication.options.start}}</p>\n    <p>End: {{publication.options.end}}</p>\n    <p>{{publication|json}}</p>\n  </div>\n  <button (click)=\"update()\">Force update...</button>\n  -->\n</div>`, styles: []\n})\nexport class LayerPropertiesComponent implements AfterViewInit, OnDestroy {\n  getKeys = Object.keys;\n  @Input() layer: MappedLayer;\n  @Input() map: LayeredMapComponent;\n  @Output() propertyChanged = new EventEmitter();\n  @Input() tooltipPlacement: string = 'right';\n  availableTags: LayerTagMap = null;\n  tags: { [key: string]: string } = {}\n  pointVariables: LayerTagValue[] = [];\n  selectedVariable: string;\n  selectedFeature: Feature<GeometryObject>;\n  selectedFeatureSubscription: any;\n\n  constructor(private pointSelectionService: PointSelectionService) {\n\n  }\n\n  get publication(): (Publication | null) {\n    if (!this.layer || !this.layer.layer || !this.layer.layer.publications) {\n      return null;\n    }\n    return this.layer.layer.publications[this.layer.options.publication || 0];\n  }\n\n  ngAfterViewInit() {\n    // if(this.layer){\n    //   this.publication=this.layer.layer.publications[this.layer.options.publication||0];\n    // }\n    // if (this.layer &&\n    //   this.layer.layer.options.smallExtent &&\n    //   !this.layer.spatialExtent) {\n    //   this.loadExtent();\n    // }\n    if (this.map) {\n      this.selectedFeatureSubscription =\n        this.map.featureSelected.subscribe((evt: { feature: Feature<GeometryObject>, layer?: MappedLayer }) => this.featureSelected(evt));\n    }\n\n    if (this.layer) {\n      setTimeout(() => {\n        this.findTags();\n      });\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.selectedFeatureSubscription) {\n      this.selectedFeatureSubscription.unsubscribe();\n    }\n  }\n\n  featureSelected(evt: { feature: Feature<GeometryObject>, layer?: MappedLayer }) {\n    if (!this.publication || !this.publication.pointdata) {\n      return;\n    }\n    this.selectedFeature = evt.feature;\n    // No guarantee that this is from the same layer!!!!\n    this.queryPointData();\n  }\n\n  publicationSelected(idx: number) {\n    this.layer.options.publication = idx;\n    // this.publication=this.layer.layer.publications[idx];\n    if (this.publication.pointdata) {\n      this.pointSelectionChanged();\n      this.updateVariables();\n    }\n\n    this.update(idx);\n  }\n\n  updateLayer() {\n    this.layer.options.tags = this.tags;\n    this.layer.update();\n    this.propertyChanged.emit(this.layer);\n  }\n\n  update(event: any) {\n    this.updateLayer();\n\n    setTimeout(() => {\n      this.findTags();\n    });\n  }\n\n  processTags(tags: { [key: string]: Array<string | LayerTagValue> }): LayerTagMap {\n    if (!tags) {\n      return null;\n    }\n\n    let result: LayerTagMap = {};\n\n    Object.keys(tags).forEach(k => {\n      let values: Array<string | LayerTagValue> = tags[k];\n      result[k] = values.map(v => {\n        let vAsTag = <LayerTagValue>v;\n        if (vAsTag.value && vAsTag.label) {\n          return vAsTag;\n        }\n        let vAsString = <string>v;\n        return {\n          value: vAsString,\n          label: vAsString\n        };\n      })\n    })\n    return result;\n  }\n\n  findTags() {\n    if (this.publication.pointdata) {\n      this.availableTags = this.processTags(this.publication.pointdata.tags);\n    } else {\n      this.availableTags = this.processTags(this.layer.flattenedSettings.options.tags);\n    }\n    this.setDefaultTags();\n  }\n\n  tagChanged(t: string) {\n    this.queryPointData();\n    this.update(null);\n  }\n\n  setDefaultTags() {\n    if (!this.availableTags) {\n      return;\n    }\n\n    Object.keys(this.availableTags).forEach(tag => {\n      if (this.tags[tag] === undefined) {\n        this.tags[tag] = this.availableTags[tag][0].value;\n      }\n    });\n\n    this.updateLayer();\n  }\n\n  zoomToExtent() {\n    if (!this.map) {\n      console.log('NO MAP!');\n      return;\n    }\n\n    this.map.lat = this.layer.layer.lat;\n    this.map.lng = this.layer.layer.lon;\n    this.map.zoom = this.layer.layer.zoom || 13;\n  }\n\n  pointSelection(): PointSelection {\n    return {\n      catalog: this.publication.pointdata,\n      variable: this.selectedVariable,\n      feature: this.selectedFeature,\n      tags: this.tags\n    };\n  }\n\n  queryPointData() {\n    let pointdata = this.publication && this.publication.pointdata;\n\n    if (!this.publication || !this.publication.pointdata) {\n      return;\n    }\n\n    this.pointSelectionChanged();\n    this.updateVariables();\n  }\n\n  updateVariables(){\n    let sel = this.pointSelection();\n    this.pointSelectionService.timeseriesVariables(\n      sel).subscribe(variables => {\n        this.pointVariables = variables.slice();\n        if(this.publication.pointdata.exclude){\n          this.pointVariables = this.pointVariables.filter(v=>{\n            return !this.publication.pointdata.exclude.some(pattern=>{\n              return !!v.value.match(pattern);\n            });\n          });\n        }\n        if(!this.pointVariables.length){\n          this.selectedVariable = null;\n        } else if (this.pointVariables.findIndex(t=>t.value===this.selectedVariable) < 0) {\n          if (this.pointVariables.findIndex(t=>t.value===this.publication.pointdata.defaultVariable) >= 0) {\n            this.selectedVariable = this.publication.pointdata.defaultVariable;\n          } else {\n            this.selectedVariable = this.pointVariables[0].value;\n          }\n        }\n        this.pointSelectionChanged();\n      });\n  }\n\n  pointSelectionChanged() {\n    this.pointSelectionService.pointSelection(this.pointSelection());\n  }\n}\n","import { Component, Input, ViewChild, AfterViewInit, ElementRef, OnChanges, SimpleChanges, Output, EventEmitter } from '@angular/core';\nimport { MappedLayer, MetadataService } from \"map-wald\";\nimport { LayeredMapComponent } from '../layered-map/layered-map.component';\n\n\ndeclare var Plotly: any;\n\n@Component({\n  selector: 'layer-control',\n  template: `<div class=\"layers-control\">\n  <div *ngIf=\"showLegends\" class=\"layers-control-header\"> <!-- header -->\n    <div class=\"float-right\">\n      <!-- TODO Attach handlers and tooltips to each icon -->\n      <i class=\"fa fa-lg fa-cog discrete-icon\" (click)=\"allLegends(false)\"></i>\n      <i class=\"fa fa-lg fa-th-list discrete-icon\" (click)=\"allLegends(true)\"></i>\n    </div>\n    <br/>\n  </div>\n\n  <div *ngIf=\"layers\">\n    <div *ngFor=\"let l of layers; let i = index\"\n         class=\"layer-control d-flex justify-content-between\">\n      <div class=\"p-2\" style=\"width:100%\">\n        <div *ngIf=\"showLegends&&l.options.legend\">\n          <div *ngIf=\"l.flattenedSettings?.palette || l.legendURL\">\n            <map-legend [title]=\"l.title\"\n              [imageURL]=\"l.legendURL\"\n              [helpText]=\"l.description()\"\n              [mapUnits]=\"l.flattenedSettings?.units\"\n              [cbPalette]=\"l.flattenedSettings?.palette?.name||l.flattenedSettings?.palette\"\n              [cbCount]=\"l.flattenedSettings?.numcolorbands||l.flattenedSettings?.palette?.count\"\n              [cbReverse]=\"l.flattenedSettings?.palette?.reverse\"\n              [cbRange]=\"l.flattenedSettings?.colorscalerange\">\n            </map-legend>\n          </div>\n        </div>\n\n        <div *ngIf=\"!showLegends||!l.options.legend\">\n          <layer-properties [layer]=\"l\"\n                            [map]=\"map\"\n                            (propertyChanged)=\"layerPropertyChanged($event)\">\n          </layer-properties>\n        </div>\n      </div>\n      <div class=\"p-2\">\n          <div>\n            <!-- TODO Attach handlers and tooltips to each icon -->\n            <i *ngIf=\"allowReorder\" class=\"fa fa-bars discrete-icon\"></i><br *ngIf=\"allowReorder\"/>\n            <i *ngIf=\"showLegends\" class=\"fa fa-cog discrete-icon\"\n               ngbTooltip=\"Show layer controls\" placement=\"right\" data-container=\"body\"\n               (click)=\"layerLegend(l,false)\"></i><br *ngIf=\"showLegends\"/>\n            <i *ngIf=\"showLegends\" class=\"fa fa-th-list discrete-icon\"\n               ngbTooltip=\"Show layer data\" placement=\"right\" data-container=\"body\"\n               (click)=\"layerLegend(l,true)\"></i><br *ngIf=\"showLegends\"/>\n            <i *ngIf=\"allowReorder\" class=\"fa fa-angle-double-up discrete-icon\"\n               ngbTooltip=\"Move to top\" placement=\"right\" data-container=\"body\"\n              (click)=\"moveToTop(i)\"></i><br *ngIf=\"allowReorder\"/>\n            <i *ngIf=\"allowReorder\" class=\"fa fa-angle-up discrete-icon\"\n               ngbTooltip=\"Move up\" placement=\"right\" data-container=\"body\"\n              (click)=\"moveUp(i)\"></i><br *ngIf=\"allowReorder\"/>\n            <i *ngIf=\"allowReorder\" class=\"fa fa-angle-down discrete-icon\"\n               ngbTooltip=\"Move down\" placement=\"right\" data-container=\"body\"\n              (click)=\"moveDown(i)\"></i><br *ngIf=\"allowReorder\"/>\n            <i *ngIf=\"allowReorder\" class=\"fa fa-angle-double-down discrete-icon\"\n               ngbTooltip=\"Move to bottom\" placement=\"right\" data-container=\"body\"\n              (click)=\"moveToBottom(i)\"></i><br *ngIf=\"allowReorder\"/>\n            <i *ngIf=\"allowRemove\" class=\"fa fa-times discrete-icon\"\n               ngbTooltip=\"Remove layer\" placement=\"right\" data-container=\"body\"\n              data-toggle=\"tooltip\" title=\"Remove layer\"\n              (click)=\"removeLayer(i)\"></i>\n          </div>\n        </div>\n      </div>\n  </div>\n</div>\n\n<!-- Should this control be outside the map? eg to the left? -->\n`,styles: [`.layers-control{\n  width:200px;\n}\n\n\n.layers-control-header, .layer-control{\n  border-bottom: 1.5px solid #aaa;\n}`]})\nexport class LayerControlComponent implements AfterViewInit, OnChanges {\n  @Input() layers: MappedLayer[];\n  @Input() map: LayeredMapComponent;\n  @Input() allowRemove = true;\n  @Input() showLegends = true;\n  @Input() allowReorder = true;\n  @Output() layersChange = new EventEmitter<MappedLayer[]>();\n  uniformViewMode: boolean | undefined;\n  foo: string = 'bar';\n\n  constructor(private metadata:MetadataService) {\n\n  }\n\n  ngAfterViewInit() {\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (!changes.layers || !this.layers) {\n      return;\n    }\n    this.applyViewMode();\n    this.fetchMetadata();\n  }\n\n  applyViewMode(){\n    if (this.uniformViewMode === undefined) {\n      return;\n    }\n\n    this.layers.forEach(l => l.options.legend = this.uniformViewMode);\n  }\n\n  allLegends(showLegend: boolean) {\n    this.uniformViewMode = showLegend;\n    this.layers.forEach(l => l.options.legend = showLegend);\n  }\n\n  layerLegend(layer: MappedLayer, showLegend: boolean) {\n    this.uniformViewMode = undefined;\n    layer.options.legend = showLegend;\n  }\n\n  moveToTop(idx: number) {\n    this.layers = [this.layers[idx]].concat(this.layers.slice(0, idx)).concat(this.layers.slice(idx + 1));\n    this._changed();\n  }\n\n  moveUp(idx: number) {\n    if (idx === 0) {\n      return;\n    }\n\n    var layers = this.layers;\n    this.layers = layers.slice(0, idx - 1).concat([layers[idx], layers[idx - 1]]).concat(layers.slice(idx + 1));\n    this._changed();\n  }\n\n  moveDown(idx: number) {\n    if (idx === (this.layers.length - 1)) {\n      return;\n    }\n\n    var layers = this.layers;\n    this.layers = layers.slice(0, idx).concat([layers[idx + 1], layers[idx]]).concat(layers.slice(idx + 2));\n    this._changed();\n  }\n\n  moveToBottom(idx: number) {\n    this.layers = this.layers.slice(0, idx).concat(this.layers.slice(idx + 1)).concat([this.layers[idx]]);\n    this._changed();\n  }\n\n  removeLayer(idx: number) {\n    var layers = this.layers.slice();\n    layers.splice(idx, 1);\n    this.layers = layers;\n    this._changed();\n  }\n\n  layerPropertyChanged(l: MappedLayer) {\n    this.layers = this.layers.slice();\n    this._changed();\n  }\n\n  private _changed() {\n    this.fetchMetadata();\n    this.layersChange.emit(this.layers);\n  }\n\n  fetchMetadata(){\n    this.layers.forEach(ml=>{\n      this.metadata.populateMetadata(ml);\n    })\n  }\n}\n","import { Component, Input, Output,\n         AfterViewInit, EventEmitter } from '@angular/core';\nimport { Catalog, Layer, LayerSelection, LayerAction } from \"map-wald\";\n\ndeclare var Plotly: any;\n\n@Component({\n  selector: 'theme-navbar',\n  template: `<ul class=\"navbar-nav\">\n  <li class=\"nav-item\" ngbDropdown *ngFor=\"let theme of catalog?.themes\">\n    <a class=\"nav-link\" ngbDropdownToggle href=\"#\"><i class=\"fa\" [ngClass]=\"theme.icon\"></i></a>\n    <div ngbDropdownMenu class=\"dropdown-menu\">\n      <a class=\"dropdown-item\" href=\"#\" (click)=\"layerClick($event,layer,'replace')\" *ngFor=\"let layer of theme.layers\">\n        <div>\n          <span>{{layer.name}}</span>\n          <span class=\"float-right layer-select-icons\">\n            <i class=\"fa fa-map layer-select-icon discrete-icon\"\n               (click)=\"layerClick($event,layer,'replace')\"\n               placement=\"right\"\n               ngbTooltip=\"Map this layer. (Replace any existing layers)\"></i>\n            <br/>\n            <i class=\"fa fa-plus layer-select-icon discrete-icon\"\n               (click)=\"layerClick($event,layer,'add')\"\n               placement=\"right\"\n               ngbTooltip=\"Add this layer to the map.\"></i>\n          </span>\n        </div>\n      </a>\n    </div>\n  </li>\n</ul>\n\n<!--\n\n[ng-reflect-ngb-tooltip].yellow + .tooltip {\n    background-color: yellow;\n}\n-->`,styles: [`\n.layer-select-icons{\n  font-size:0.75em;\n  margin-right:-20px;\n}\n\n/* Annoying... using /deep/ to access the child component\n * but /deep/ (and synonyms) are deprecated. Not clear what\n * we should be doing\n */\n/deep/ .tooltip-inner {\n  width: 400px;\n}\n\n.dropdown-item{\n  border-bottom: 1px solid #aaa;\n  height: 40px;\n}\n`]})\nexport class ThemeNavbarComponent implements AfterViewInit  {\n  @Input() catalog:Catalog;\n  @Input() includeSearch:boolean;\n\n  @Output() layerSelected:EventEmitter<LayerSelection> = new EventEmitter<LayerSelection>();\n\n  constructor(){\n\n  }\n\n  ngAfterViewInit(){\n\n  }\n\n  layerClick(event:any,layer:Layer,action:LayerAction){\n    this.stop(event);\n    var selection = {\n      layer:layer,\n      action:action\n    };\n\n    this.layerSelected.emit(selection);\n  }\n\n  stop(event:any){\n    event.preventDefault();\n    event.stopPropagation();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {MapsAPILoader} from '@agm/core';\nimport {Observable, from} from 'rxjs';\n\ndeclare var google:any;\n\nexport interface GeocodingResult {\n  formatted_address:string;\n  coords: number[]\n}\n\n@Injectable()\nexport class GeocodingService {\n  constructor(private _api:MapsAPILoader){\n\n  }\n\n  geocode(address:string,bnds?:any):Observable<GeocodingResult[]>{\n    var promise = new Promise<GeocodingResult[]>((resolve,reject)=>{\n      this._api.load().then(()=>{\n        const SUCCESS_STATUSES = [\n          google.maps.GeocoderStatus.OK,\n          google.maps.GeocoderStatus.ZERO_RESULTS\n        ];\n        var service = new google.maps.Geocoder();\n        service.geocode({\n          address:address,\n          componentRestrictions: {\n            country: 'AU'\n          },\n          region:'AU'\n        },(results:GeocodingResult[],status:any)=>{\n          if(SUCCESS_STATUSES.indexOf(status)<0){\n            reject();\n          } else {\n            resolve(results.filter(function(r:any){\n              return r.formatted_address!=='Australia';\n            }));\n          }\n        });\n      });\n    });\n\n    return from(promise);\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgPipesModule } from 'ngx-pipes';\nimport { AgmCoreModule } from '@agm/core';\nimport { CommonModule } from '@angular/common';\nimport { MapWaldCoreModule } from 'map-wald';\n\nimport { WMSLayerComponent } from './wms-layer/wms-layer.component';\nimport { MapLegendComponent } from './map-legend/map-legend.component';\nimport { MapControlComponent } from './map-control/map-control.component';\nimport { DateShifterComponent } from './date-shifter/date-shifter.component';\nimport { OneTimeSplashComponent } from './one-time-splash/one-time-splash.component';\nimport { DateElementComponent } from './date-element/date-element.component';\nimport { ShareViewComponent } from './share-view/share-view.component';\nimport { LocationSearchComponent } from './location-search/location-search.component';\nimport { ZoomLayerComponent } from './action-buttons/zoom-layer/zoom-layer.component';\nimport { ZoomFullComponent } from './action-buttons/zoom-full/zoom-full.component';\nimport { ZoomOutComponent } from './action-buttons/zoom-out/zoom-out.component';\nimport { ZoomInComponent } from './action-buttons/zoom-in/zoom-in.component';\nimport {CycleBaseMapComponent} from './action-buttons/cycle-base-map/cycle-base-map.component';\nimport {CycleOpacityComponent} from './action-buttons/cycle-opacity/cycle-opacity.component';\nimport { ButtonBarComponent } from './button-bar/button-bar.component';\nimport { TimeseriesChartComponent } from './timeseries-chart/timeseries-chart.component';\nimport { FeatureTableComponent } from './feature-table/feature-table.component';\nimport { CollapsibleMapControlComponent } from './collapsible-map-control/collapsible-map-control.component';\nimport { BaseMapSelectionComponent } from './base-map-selection/base-map-selection.component';\nimport { SimpleTreeNodeComponent } from './simple-tree-node/simple-tree-node.component';\nimport { SimpleTreeComponent } from './simple-tree/simple-tree.component';\nimport { CatalogComponent } from './catalog/catalog.component';\nimport { DateSelectionComponent } from './date-selection/date-selection.component';\nimport { LayerPropertiesComponent } from './layer-properties/layer-properties.component';\nimport { LayerControlComponent } from './layer-control/layer-control.component';\nimport { LayeredMapComponent } from './layered-map/layered-map.component';\nimport { ThemeNavbarComponent } from './theme-navbar/theme-navbar.component';\n\nimport { GeocodingService } from './geocoding.service';\n\nexport * from './wms-layer/wms-layer.component';\nexport * from './map-legend/map-legend.component';\nexport * from './date-shifter/date-shifter.component';\nexport * from './one-time-splash/one-time-splash.component';\nexport * from './date-element/date-element.component';\nexport * from './share-view/share-view.component';\nexport * from './location-search/location-search.component';\nexport * from './action-buttons/zoom-layer/zoom-layer.component';\nexport * from './action-buttons/zoom-full/zoom-full.component';\nexport * from './action-buttons/zoom-out/zoom-out.component';\nexport * from './action-buttons/zoom-in/zoom-in.component';\nexport * from './action-buttons/cycle-base-map/cycle-base-map.component';\nexport * from './action-buttons/cycle-opacity/cycle-opacity.component';\n\nexport * from './button-bar/button-bar.component';\nexport * from './timeseries-chart/timeseries-chart.component';\nexport * from './feature-table/feature-table.component';\nexport * from './collapsible-map-control/collapsible-map-control.component';\nexport * from './base-map-selection/base-map-selection.component';\nexport * from './simple-tree-node/simple-tree-node.component';\nexport * from './simple-tree/simple-tree.component';\nexport * from './catalog/catalog.component';\nexport * from './date-selection/date-selection.component';\nexport * from './layer-properties/layer-properties.component';\nexport * from './layer-control/layer-control.component';\nexport * from './layered-map/layered-map.component';\nexport * from './theme-navbar/theme-navbar.component';\nexport * from './map-control/map-control.component';\n\nexport * from './geocoding.service';\n\n\nconst components = [\n  //$componentList\n  DateShifterComponent,\n  OneTimeSplashComponent,\n  DateElementComponent,\n  ShareViewComponent,\n  LocationSearchComponent,\n  ZoomLayerComponent,\n  ZoomFullComponent,\n  ZoomOutComponent,\n  ZoomInComponent,\n  CycleBaseMapComponent,\n  CycleOpacityComponent,\n  ButtonBarComponent,\n  TimeseriesChartComponent,\n  FeatureTableComponent,\n  CollapsibleMapControlComponent,\n  BaseMapSelectionComponent,\n  SimpleTreeNodeComponent,\n  SimpleTreeComponent,\n  CatalogComponent,\n  DateSelectionComponent,\n  LayerPropertiesComponent,\n  LayerControlComponent,\n  LayeredMapComponent,\n  ThemeNavbarComponent,\n  WMSLayerComponent,\n  MapLegendComponent,\n  MapControlComponent\n];\n\nconst services = [\n  //$serviceList\n  GeocodingService\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    AgmCoreModule,\n    HttpClientModule,\n    NgPipesModule,\n    NgbModule,\n    MapWaldCoreModule\n  ],\n  declarations: components,\n  exports: components,\n  providers: services\n})\nexport class MapWaldBootstrapModule {\n  static forRoot(moduleInitialisation:any): ModuleWithProviders<MapWaldBootstrapModule> {\n    return {\n      ngModule: MapWaldBootstrapModule,\n      providers: services\n    };\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"]}